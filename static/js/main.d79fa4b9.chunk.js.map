{"version":3,"sources":["utils/common-functions.js","components/row.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","components/minigraph.js","components/home.js","components/navbar.js","components/links.js","components/cluster.js","components/faq.js","components/banner.js","App.js","serviceWorker.js","index.js"],"names":["formatDate","unformattedDate","day","slice","month","year","time","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","Object","keys","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","forEach","key","handleSort","column","setItem","Fragment","className","reveal","style","display","total","onClick","onMouseEnter","onHighlightState","index","onMouseLeave","touchstart","fontWeight","color","delta","active","recovered","deaths","colSpan","isNaN","Date","parse","lastupdatedtime","formatDistance","e","title","window","innerWidth","map","district","toLowerCase","onHighlightDistrict","Unknown","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","reduce","a","length","filter","s","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","districtData","Level","data","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","parseData","deltas","confirmeddelta","recovereddelta","deceaseddelta","MAP_TYPES","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","choroplethMap","useRef","svgRenderCount","setSvgRenderCount","ready","geoData","d3","remove","propertyField","mapType","svg","current","width","attr","height","topology","topojson","objects","graphObjectName","projection","fitSize","fitExtent","path","onceTouchedRegion","append","selectAll","features","enter","d","n","properties","maxConfirmed","on","name","err","console","log","handleMouseover","target","parentNode","appendChild","text","value","parseFloat","toFixed","toTitleCase","str","split","i","charAt","toUpperCase","join","renderData","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","shapeHeight","titleWidth","labels","orient","scale","select","call","geoDataFile","prevCount","classed","nodes","highlightRegionInMap","id","viewBox","preserveAspectRatio","ref","India","Assam","Bihar","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","regionHighlighted","setSelectedRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","region","getRegionFromState","useMemo","currentMapData","acc","districtWiseData","getRegionFromDistrict","undefined","newMap","switchMapToState","topDistrict","b","TimeSeries","timeseries","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","update","setUpdate","graphElement1","graphElement2","graphElement3","graphElement4","graphElement5","graphElement6","u","graphData","svg1","svg2","svg3","svg4","svg5","svg6","margin","dateMin","setDate","getDate","dateMax","x","range","indexScale","svgArray","dataTypes","colors","yScales","_","focus","y","mouseout","mousemove","xm","this","round","invert","f","j","ticks","tickPadding","tickFormat","tick","dots","datum","curve","refreshGraphs","graphs","type","Minigraph","y1","path1","totalLength1","node","getTotalLength","transition","duration","animate","path2","totalLength2","path3","totalLength3","path4","totalLength4","Home","setStateDistrictWiseData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","setDeltas","timeseriesMode","setTimeseriesMode","setRegionHighlighted","getStates","Promise","all","axios","get","response","stateDistrictWiseResponse","statewise","cases_time_series","key_values","htmlFor","aria-label","checked","onChange","event","Navbar","location","pathname","alt","src","pages","page","to","pageLink","animationDelayForNavbar","displayName","Links","href","Cluster","referrerPolicy","FAQ","faq","setFaq","getFAQs","then","catch","error","question","answer","Banner","snippets","setSnippets","snippet","setSnippet","factoids","snippetChooser","min","max","random","interval","setInterval","clearInterval","banner","history","require","createBrowserHistory","App","view","render","exact","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.d79fa4b9.chunk.js","sourcesContent":["export const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n","import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {formatDate} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <span\n        className={`dropdown ${\n          props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n        }`}\n        style={{display: !props.total ? '' : 'none'}}\n        onClick={() => {\n          handleReveal();\n        }}\n      >\n        <Icon.ChevronDown />\n      </span>\n      <tr\n        className={props.total ? 'state is-total' : 'state'}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        touchstart={() => props.onHighlightState?.(state, props.index)}\n        onClick={() => {\n          handleReveal();\n        }}\n      >\n        <td style={{fontWeight: 600}}>{state.state}</td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.delta.confirmed > 0 && <Icon.ArrowUp />}\n            {state.delta.confirmed > 0 ? `${state.delta.confirmed}` : ''}\n          </span>\n          {parseInt(state.confirmed) === 0 ? '-' : state.confirmed}\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? '-' : state.active}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          {/* <span className=\"deltas\" style={{color: '#28a745'}}>\n            {!state.delta.recovered==0 && <Icon.ArrowUp/>}\n            {state.delta.recovered > 0 ? `${state.delta.recovered}` : ''}\n          </span>*/}\n          {parseInt(state.recovered) === 0 ? '-' : state.recovered}\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {/* <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {!state.delta.deaths==0 && <Icon.ArrowUp/>}\n            {state.delta.deaths>0 ? `${state.delta.deaths}` : ''}\n          </span>*/}\n          {parseInt(state.deaths) === 0 ? '-' : state.deaths}\n        </td>\n      </tr>\n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={5}>\n          <div className=\"last-update\">\n            <h6>Last Updated&nbsp;</h6>\n            <h6>\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} Ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td onClick={(e) => handleSort('district')}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? 'C'\n                  : 'Cnfmd'\n                : 'Confirmed'}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n      </tr>\n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts).map((district, index) => {\n          if (district.toLowerCase() !== 'unknown') {\n            return (\n              <tr\n                key={index}\n                className={`district`}\n                style={{display: props.reveal && !props.total ? '' : 'none'}}\n                onMouseEnter={() =>\n                  props.onHighlightDistrict?.(district, state, props.index)\n                }\n                onMouseLeave={() => props.onHighlightDistrict?.()}\n                touchstart={() =>\n                  props.onHighlightDistrict?.(district, state, props.index)\n                }\n              >\n                <td style={{fontWeight: 600}}>{district}</td>\n                <td>\n                  <span className=\"deltas\" style={{color: '#ff073a'}}>\n                    {sortedDistricts[district].delta.confirmed > 0 && (\n                      <Icon.ArrowUp />\n                    )}\n                    {sortedDistricts[district].delta.confirmed > 0\n                      ? `${sortedDistricts[district].delta.confirmed}`\n                      : ''}\n                  </span>\n\n                  {sortedDistricts[district].confirmed}\n                </td>\n              </tr>\n            );\n          }\n          return null;\n        })}\n\n      {sortedDistricts?.Unknown && (\n        <tr\n          className={`district`}\n          style={{display: props.reveal && !props.total ? '' : 'none'}}\n        >\n          <td style={{fontWeight: 600}}>Unknown</td>\n          <td>\n            <span className=\"deltas\" style={{color: '#ff073a'}}>\n              {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                <Icon.ArrowUp />\n              )}\n              {sortedDistricts['Unknown'].delta.confirmed > 0\n                ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                : ''}\n            </span>\n            {sortedDistricts['Unknown'].confirmed}\n          </td>\n        </tr>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default Row;\n","import React, {useState, useEffect} from 'react';\n\nimport Row from './row';\n\nfunction Table(props) {\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  return (\n    <>\n      <h5 className=\"affected-count fadeInUp\" style={{animationDelay: '1s'}}>\n        {count} States/UTS Affected\n      </h5>\n      <table className=\"table fadeInUp\" style={{animationDelay: '1s'}}>\n        <thead>\n          <tr>\n            <th\n              className=\"sticky state-heading\"\n              onClick={(e) => handleSort(e, props)}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\">State/UT</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'C'\n                      : 'Cnfmd'\n                    : 'Confirmed'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                  title=\"Active\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'A'\n                      : 'Actv'\n                    : 'Active'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                  title=\"Recovered\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'R'\n                      : 'Rcvrd'\n                    : 'Recovered'}\n                </abbr>\n                <div\n                  className={\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                  }\n                ></div>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                  title=\"Deaths\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'D'\n                      : 'Dcsd'\n                    : 'Deceased'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n          </tr>\n        </thead>\n\n        {states.map((state, index) => {\n          if (index !== 0 && state.confirmed > 0) {\n            return (\n              <tbody key={index}>\n                <Row\n                  key={index}\n                  index={index}\n                  state={state}\n                  total={false}\n                  reveal={revealedStates[state.state]}\n                  districts={\n                    Object.keys(districts).length - 1 > 0\n                      ? districts[state.state].districtData\n                      : []\n                  }\n                  onHighlightState={props.onHighlightState}\n                  onHighlightDistrict={props.onHighlightDistrict}\n                  handleReveal={handleReveal}\n                />\n              </tbody>\n            );\n          }\n          return null;\n        })}\n\n        <tbody>\n          {states.length > 1 && props.summary === false && (\n            <Row key={0} state={states[0]} total={true} />\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Table;\n","import React, {useState, useEffect} from 'react';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  const [confirmed, setConfirmed] = useState(0);\n  const [active, setActive] = useState(0);\n  const [recoveries, setRecoveries] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  useEffect(() => {\n    const parseData = () => {\n      let confirmed = 0;\n      let active = 0;\n      let recoveries = 0;\n      let deaths = 0;\n      data.forEach((state, index) => {\n        if (index !== 0) {\n          confirmed += parseInt(state.confirmed);\n          active += parseInt(state.active);\n          recoveries += parseInt(state.recovered);\n          deaths += parseInt(state.deaths);\n        }\n      });\n      setConfirmed(confirmed);\n      setActive(active);\n      setRecoveries(recoveries);\n      setDeaths(deaths);\n    };\n    parseData();\n  }, [data]);\n\n  return (\n    <div className=\"Level fadeInUp\" style={{animationDelay: '0.8s'}}>\n      <div className=\"level-item is-cherry\">\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {props.deltas\n            ? props.deltas.confirmeddelta >= 0\n              ? '+' + props.deltas.confirmeddelta\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1>{confirmed} </h1>\n      </div>\n\n      <div className=\"level-item is-blue\">\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{active}</h1>\n      </div>\n\n      <div className=\"level-item is-green\">\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {props.deltas\n            ? props.deltas.recovereddelta >= 0\n              ? '+' + props.deltas.recovereddelta\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">{recoveries} </h1>\n      </div>\n\n      <div className=\"level-item is-gray\">\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [\n          {props.deltas\n            ? props.deltas.deceaseddelta >= 0\n              ? '+' + props.deltas.deceaseddelta\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{deaths}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Level;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport {legendColor} from 'd3-svg-legend';\nimport * as topojson from 'topojson';\nimport {MAP_TYPES} from '../constants';\n\nconst propertyFieldMap = {\n  country: 'ST_NM',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n}) {\n  const choroplethMap = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const maxInterpolation = 0.8;\n      const svg = d3.select(choroplethMap.current);\n      const width = +svg.attr('width');\n      const height = +svg.attr('height');\n\n      const handleMouseover = (name) => {\n        try {\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n        projection.fitSize([width, height], topology);\n      else\n        projection.fitExtent(\n          [\n            [90, 20],\n            [width, height],\n          ],\n          topology\n        );\n\n      const path = d3.geoPath(projection);\n\n      let onceTouchedRegion = null;\n\n      svg\n        .append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .enter()\n        .append('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color =\n            n === 0\n              ? '#ffffff'\n              : d3.interpolateReds(\n                  (maxInterpolation * n) / (statistic.maxConfirmed || 0.001)\n                );\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n          const target = d3.event.target;\n          d3.select(target.parentNode.appendChild(target)).attr(\n            'class',\n            'map-hover'\n          );\n        })\n        .on('mouseleave', (d) => {\n          const target = d3.event.target;\n          d3.select(target).attr('class', 'path-region map-default');\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', (d) => {\n          if (onceTouchedRegion) {\n            return;\n          }\n          if (mapMeta.mapType === MAP_TYPES.STATE) {\n            return;\n          }\n          changeMap(d.properties[propertyField], mapMeta.mapType);\n        })\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2) +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      svg\n        .append('path')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  const renderData = useCallback(() => {\n    const svg = d3.select(choroplethMap.current);\n\n    // Colorbar\n    const maxInterpolation = 0.8;\n    const color = d3\n      .scaleSequential(d3.interpolateReds)\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10]);\n\n    let cells = null;\n    let label = null;\n\n    label = ({i, genLength, generatedLabels, labelDelimiter}) => {\n      if (i === genLength - 1) {\n        const n = Math.floor(generatedLabels[i]);\n        return `${n}+`;\n      } else {\n        const n1 = 1 + Math.floor(generatedLabels[i]);\n        const n2 = Math.floor(generatedLabels[i + 1]);\n        return `${n1} - ${n2}`;\n      }\n    };\n\n    const numCells = 6;\n    const delta = Math.floor(\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\n        (numCells - 1)\n    );\n\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta);\n\n    svg\n      .append('g')\n      .attr('class', 'legendLinear')\n      .attr('transform', 'translate(1, 335)');\n\n    const legendLinear = legendColor()\n      .shapeWidth(36)\n      .shapeHeight(10)\n      .cells(cells)\n      .titleWidth(3)\n      .labels(label)\n      .title('Confirmed Cases')\n      .orient('vertical')\n      .scale(color);\n\n    svg\n      .select('.legendLinear')\n      .call(legendLinear)\n      .selectAll('text')\n      .style('font-size', '10px');\n  }, [statistic.maxConfirmed]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        renderData();\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, renderData, ready]);\n\n  const highlightRegionInMap = (name, mapType) => {\n    const propertyField = propertyFieldMap[mapType];\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion, mapMeta.mapType);\n  }, [mapMeta.mapType, svgRenderCount, selectedRegion]);\n\n  return (\n    <div className=\"svg-parent\">\n      <svg\n        id=\"chart\"\n        width=\"480\"\n        height=\"450\"\n        viewBox=\"0 0 480 450\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        ref={choroplethMap}\n      ></svg>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\nimport {formatDate} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\n\nconst mapMeta = {\n  India: {\n    name: 'India',\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'india',\n  },\n  'Andaman and Nicobar Islands': {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    name: 'Arunachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    name: 'Andhra Pradesh',\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andhrapradesh_district',\n  },\n\n  Assam: {\n    name: 'Assam',\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bihar_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chhattisgarh_district',\n  },\n  Delhi: {\n    name: 'Delhi',\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'delhi_1997-2012_district',\n  },\n  Karnataka: {\n    name: 'Karnataka',\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'karnataka_district',\n  },\n  Kerala: {\n    name: 'Kerala',\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kerala_district',\n  },\n  Goa: {\n    name: 'Goa',\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'goa_district',\n  },\n  Gujarat: {\n    name: 'Gujarat',\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'gujarat_district_2011',\n  },\n  Haryana: {\n    name: 'Haryana',\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    name: 'Himachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    name: 'Jammu and Kashmir',\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    name: 'Jharkhand',\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jharkhand_district',\n  },\n  Ladakh: {\n    name: 'Ladakh',\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ladakh_district',\n  },\n  'Madhya Pradesh': {\n    name: 'Madhya Pradesh',\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    name: 'Maharashtra',\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n  },\n  Manipur: {\n    name: 'Manipur',\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'manipur_pre2016_districts',\n  },\n  Meghalaya: {\n    name: 'Meghalaya',\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'meghalaya_district',\n  },\n  Mizoram: {\n    name: 'Mizoram',\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mizoram_district',\n  },\n  Nagaland: {\n    name: 'Nagaland',\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'nagaland_district',\n  },\n  Odisha: {\n    name: 'Odisha',\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'odisha_district',\n  },\n  Punjab: {\n    name: 'Punjab',\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'punjab_district',\n  },\n  Rajasthan: {\n    name: 'Rajasthan',\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rajasthan_district',\n  },\n  Sikkim: {\n    name: 'Sikkim',\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    name: 'Tamil Nadu',\n    geoDataFile: `${MAPS_DIR}/tamil-nadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tamilnadu_district',\n  },\n  Telangana: {\n    name: 'Telangana',\n    geoDataFile: `${MAPS_DIR}/telugana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'telugana',\n  },\n  Tripura: {\n    name: 'Tripura',\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tripura_district',\n  },\n  Uttarakhand: {\n    name: 'Uttarakhand',\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    name: 'Uttar Pradesh',\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    name: 'West Bengal',\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'westbengal_district',\n  },\n};\n\nexport default function ({states, stateDistrictWiseData, regionHighlighted}) {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta.India);\n\n  useEffect(() => {\n    const region = getRegionFromState(states[1]);\n    setCurrentHoveredRegion(region);\n  }, [states]);\n\n  if (!currentHoveredRegion) {\n    return null;\n  }\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        setCurrentHoveredRegion(\n          getRegionFromState(states.filter((state) => name === state.state)[0])\n        );\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n      }\n    },\n    [stateDistrictWiseData, states]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined) {\n      return;\n    } else if (regionHighlighted === null) {\n      setSelectedRegion(null);\n      return;\n    }\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = mapMeta['India'];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setCurrentHoveredRegion(region);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = mapMeta[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, currentMap.mapType, setHoveredRegion]);\n\n  const getRegionFromDistrict = (districtData, name) => {\n    if (!districtData) {\n      return;\n    }\n    const region = {...districtData};\n    if (!region.name) {\n      region.name = name;\n    }\n    return region;\n  };\n\n  const getRegionFromState = (state) => {\n    if (!state) {\n      return;\n    }\n    const region = {...state};\n    if (!region.name) {\n      region.name = region.state;\n    }\n    return region;\n  };\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = mapMeta[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[1].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const districtData = (stateDistrictWiseData[name] || {districtData: {}})\n          .districtData;\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  return (\n    <div className=\"MapExplorer fadeInUp\" style={{animationDelay: '1.2s'}}>\n      <div className=\"header\">\n        <h1>{currentMap.name} Map</h1>\n        <h6>\n          Hover over a{' '}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state' : 'district'} for\n          more details\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats\">\n          <h5>Confirmed</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.confirmed}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats is-blue\">\n          <h5>Active</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.active || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats is-green\">\n          <h5>Recovered</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.recovered || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats is-gray\">\n          <h5>Deceased</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.deaths || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta\">\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>Last Updated</h6>\n            <h3>\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  ) + ' Ago'}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n      />\n    </div>\n  );\n}\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction TimeSeries(props) {\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(10);\n  const [mode, setMode] = useState(props.mode);\n  const [update, setUpdate] = useState(-1);\n\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n  const graphElement5 = useRef(null);\n  const graphElement6 = useRef(null);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries);\n    }\n  }, [props.timeseries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n    setUpdate((u) => u + 1);\n  }, [props.mode]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      const data = timeseries;\n      setDatapoint(timeseries[timeseries.length - 1]);\n      setIndex(timeseries.length - 1);\n\n      const svg1 = d3.select(graphElement1.current);\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n      const svg5 = d3.select(graphElement5.current);\n      const svg6 = d3.select(graphElement6.current);\n\n      // Margins\n      const margin = {top: 0, right: 20, bottom: 50, left: 20};\n      const width = 650 - margin.left - margin.right;\n      const height = 200 - margin.top - margin.bottom;\n\n      const dateMin = new Date(data[0]['date'] + '2020');\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(data[timeseries.length - 1]['date'] + '2020');\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const x = d3\n        .scaleTime()\n        .domain([dateMin, dateMax])\n        .range([margin.left, width]);\n\n      const indexScale = d3\n        .scaleLinear()\n        .domain([0, timeseries.length])\n        .range([margin.left, width]);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3, svg4, svg5, svg6];\n      const dataTypes = [\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n        'dailyconfirmed',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n      const colors = [\n        '#ff073a',\n        '#28a745',\n        '#6c757d',\n        '#ff073a',\n        '#28a745',\n        '#6c757d',\n      ];\n      const maxDataTypes = Array.from({length: svgArray.length}, (_, i) => {\n        return d3.max(data, (d) => {\n          return +d[dataTypes[i]];\n        });\n      });\n      const yScales = maxDataTypes.map((d) => {\n        return d3\n          .scaleLinear()\n          .domain([-d / 10, d])\n          .range([height, margin.top]);\n      });\n\n      /* Focus dots */\n      const focus = svgArray.map((d, i) => {\n        const y = mode ? yScales[0] : yScales[i];\n        return d\n          .append('g')\n          .append('circle')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 5)\n          .attr('cx', x(new Date(data[timeseries.length - 1]['date'] + '2020')))\n          .attr('cy', y(data[timeseries.length - 1][dataTypes[i]]));\n      });\n\n      function mouseout() {\n        setDatapoint(data[timeseries.length - 1]);\n        setIndex(timeseries.length - 1);\n        focus.forEach((d, i) => {\n          const y = mode ? yScales[0] : yScales[i];\n          d.attr(\n            'cx',\n            x(new Date(data[timeseries.length - 1]['date'] + '2020'))\n          ).attr('cy', y(data[timeseries.length - 1][dataTypes[i]]));\n        });\n      }\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const i = Math.round(indexScale.invert(xm));\n        if (0 <= i && i < timeseries.length) {\n          const d = data[i];\n          setDatapoint(d);\n          setIndex(i);\n          focus.forEach((f, j) => {\n            const y = mode ? yScales[0] : yScales[j];\n            f.attr('cx', x(new Date(d['date'] + '2020'))).attr(\n              'cy',\n              y(d[dataTypes[j]])\n            );\n          });\n        }\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((s, i) => {\n        /* X axis */\n        s.append('g')\n          .attr('transform', 'translate(0,' + height + ')')\n          .attr('class', 'axis')\n          .call(d3.axisBottom(x));\n\n        /* Y axis */\n        s.append('g')\n          .attr('transform', `translate(${width}, ${0})`)\n          .attr('class', 'axis')\n          .call(\n            d3\n              .axisRight(mode ? yScales[0] : yScales[i])\n              .ticks(5)\n              .tickPadding(5)\n              .tickFormat((tick) => {\n                if (Math.floor(tick) === tick) return tick;\n              })\n          );\n\n        /* Focus dots */\n        s.on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n\n        /* Path dots */\n        const dots = s\n          .selectAll('.dot')\n          .data(data)\n          .enter()\n          .append('circle')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('cursor', 'pointer')\n          .attr('cx', (d) => {\n            return x(new Date(d['date'] + '2020'));\n          })\n          .attr('cy', (d) => {\n            if (mode) return yScales[0](d[dataTypes[i]]);\n            return yScales[i](d[dataTypes[i]]);\n          });\n\n        /* Paths */\n        if (i < Math.floor(svgArray.length / 2)) {\n          s.append('path')\n            .datum(data)\n            .attr('fill', 'none')\n            .attr('stroke', colors[i] + '99')\n            .attr('stroke-width', 5)\n            .attr('cursor', 'pointer')\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => {\n                  return x(new Date(d['date'] + '2020'));\n                })\n                .y((d) => {\n                  if (mode) return yScales[0](d[dataTypes[i]]);\n                  return yScales[i](d[dataTypes[i]]);\n                })\n                .curve(d3.curveCardinal)\n            );\n          dots.attr('r', 3);\n        } else {\n          s.selectAll('stem-line')\n            .data(data)\n            .enter()\n            .append('line')\n            .attr('x1', (d) => {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .attr('y1', height)\n            .attr('x2', (d) => {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .attr('y2', (d) => {\n              return mode\n                ? yScales[0](d[dataTypes[i]])\n                : yScales[i](d[dataTypes[i]]);\n            })\n            .style('stroke', colors[i] + '99')\n            .style('stroke-width', 4);\n          dots.attr('r', 2);\n        }\n      });\n    },\n    [mode]\n  );\n\n  const refreshGraphs = useCallback(() => {\n    const graphs = [\n      graphElement1,\n      graphElement2,\n      graphElement3,\n      graphElement4,\n      graphElement5,\n      graphElement6,\n    ];\n    for (let i = 0; i <= graphs.length; i++) {\n      if (i === graphs.length) {\n        graphData(timeseries);\n        return;\n      } else d3.select(graphs[i].current).selectAll('*').remove();\n    }\n  }, [timeseries, graphData]);\n\n  useEffect(() => {\n    if (update > 0) {\n      refreshGraphs();\n    }\n  }, [update, refreshGraphs]);\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{animationDelay: '1.7s'}}\n    >\n      <div\n        className=\"timeseries\"\n        style={{display: props.type === 1 ? 'flex' : 'none'}}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5>Confirmed {datapoint['date']}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalconfirmed'] -\n                        timeseries[index - 1]['totalconfirmed'])\n                    : timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement1}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5>Recovered {datapoint['date']}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalrecovered'] -\n                        timeseries[index - 1]['totalrecovered'])\n                    : timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement2}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5>\n              Deceased <br />\n              {datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totaldeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totaldeceased'] -\n                        timeseries[index - 1]['totaldeceased'])\n                    : timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement3}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"timeseries\"\n        style={{display: props.type === 2 ? 'flex' : 'none'}}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5>Confirmed {datapoint['date']}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyconfirmed'] -\n                        timeseries[index - 1]['dailyconfirmed'])\n                    : timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement4}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5>Recovered {datapoint['date']}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyrecovered'] -\n                        timeseries[index - 1]['dailyrecovered'])\n                    : timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement5}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5>\n              Deceased <br />\n              {datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailydeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailydeceased'] -\n                        timeseries[index - 1]['dailydeceased'])\n                    : timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement6}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction Minigraph(props) {\n  const [timeseries, setTimeseries] = useState([]);\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 20));\n    }\n  }, [props.timeseries]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (timeseries.length <= 1) return 0;\n      const data = timeseries;\n      const svg1 = d3.select(graphElement1.current);\n      const margin = {top: 30, right: 5, bottom: 30, left: 0};\n      const width = 100 - margin.left - margin.right;\n      const height = 100 - margin.top - margin.bottom;\n\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n\n      const x = d3\n        .scaleTime()\n        .domain(\n          d3.extent(data, function (d) {\n            return new Date(d['date'] + '2020');\n          })\n        )\n        .range([0, width]);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([\n          0,\n          d3.max(data, function (d) {\n            return +d['dailyconfirmed'];\n          }),\n        ])\n        .range([height, 0]);\n\n      const path1 = svg1\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#ff073a99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              return y1(d['dailyconfirmed']);\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength1 = path1.node().getTotalLength();\n      path1\n        .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\n        .attr('stroke-dashoffset', totalLength1)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg1\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#ff073a')\n        .attr('stroke', '#ff073a')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailyconfirmed']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path2 = svg2\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('cursor', 'pointer')\n        .attr('stroke', '#007bff99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n                );\n              } else {\n                return y1(\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n                );\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength2 = path2.node().getTotalLength();\n      path2\n        .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\n        .attr('stroke-dashoffset', totalLength2)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg2\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#007bff')\n        .attr('stroke', '#007bff')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          /* const today =\n          data[data.length - 1]['dailyconfirmed'] -\n          data[data.length - 1]['dailyrecovered'] -\n          data[data.length - 1]['dailydeceased'];\n        const yesterday =\n          data[data.length - 2]['dailyconfirmed'] -\n          data[data.length - 2]['dailyrecovered'] -\n          data[data.length - 2]['dailydeceased'];*/\n          return y1(\n            d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n          );\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path3 = svg3\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#28a74599')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(d['dailyrecovered']);\n              } else {\n                return y1(d['dailyrecovered']);\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength3 = path1.node().getTotalLength();\n      path3\n        .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\n        .attr('stroke-dashoffset', totalLength3)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg3\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#28a745')\n        .attr('stroke', '#28a745')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailyrecovered']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path4 = svg4\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('cursor', 'pointer')\n        .attr('stroke', '#6c757d99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(d['dailydeceased']);\n              } else {\n                return y1(d['dailydeceased']);\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength4 = path4.node().getTotalLength();\n      path4\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\n        .attr('stroke-dashoffset', totalLength4)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg4\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#6c757d')\n        .attr('stroke', '#6c757d')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailydeceased']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n    },\n    [props.animate]\n  );\n\n  useEffect(() => {\n    graphData(timeseries);\n  }, [timeseries, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <svg\n          ref={graphElement1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '0.7s'}}\n      >\n        <svg\n          ref={graphElement2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '0.8s'}}\n      >\n        <svg\n          ref={graphElement3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '0.9s'}}\n      >\n        <svg\n          ref={graphElement4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Minigraph;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {formatDistance} from 'date-fns';\nimport {formatDate} from '../utils/common-functions';\nimport Table from './table';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport TimeSeries from './timeseries';\nimport Minigraph from './minigraph';\n\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState([]);\n  const [deltas, setDeltas] = useState([]);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [response, stateDistrictWiseResponse] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n      ]);\n      setStates(response.data.statewise);\n      setTimeseries(response.data.cases_time_series);\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\n      setDeltas(response.data.key_values[0]);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) setRegionHighlighted(null);\n    else setRegionHighlighted({state, index});\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) setRegionHighlighted(null);\n    else setRegionHighlighted({district, state, index});\n  };\n\n  return (\n    <div className=\"Home\">\n      <div className=\"home-left\">\n        <div className=\"header fadeInUp\" style={{animationDelay: '0.5s'}}>\n          <div className=\"header-mid\">\n            <div className=\"titles\">\n              <h1>India COVID-19 Tracker</h1>\n              <h6>A Crowdsourced Initiative</h6>\n            </div>\n            <div className=\"last-update\">\n              <h6>Last Updated</h6>\n              <h3>\n                {isNaN(Date.parse(formatDate(lastUpdated)))\n                  ? ''\n                  : formatDistance(\n                      new Date(formatDate(lastUpdated)),\n                      new Date()\n                    ) + ' Ago'}\n              </h3>\n            </div>\n          </div>\n        </div>\n\n        <Level data={states} deltas={deltas} />\n        <Minigraph timeseries={timeseries} animate={true} />\n\n        <Table\n          states={states}\n          summary={false}\n          stateDistrictWiseData={stateDistrictWiseData}\n          onHighlightState={onHighlightState}\n          onHighlightDistrict={onHighlightDistrict}\n        />\n      </div>\n\n      <div className=\"home-right\">\n        {fetched && (\n          <React.Fragment>\n            <MapExplorer\n              states={states}\n              stateDistrictWiseData={stateDistrictWiseData}\n              regionHighlighted={regionHighlighted}\n            />\n\n            <div\n              className=\"timeseries-header fadeInUp\"\n              style={{animationDelay: '1.5s'}}\n            >\n              <h1>Spread Trends</h1>\n              <div className=\"tabs\">\n                <div\n                  className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                  onClick={() => {\n                    setGraphOption(1);\n                  }}\n                >\n                  <h4>Cumulative</h4>\n                </div>\n                <div\n                  className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                  onClick={() => {\n                    setGraphOption(2);\n                  }}\n                >\n                  <h4>Daily</h4>\n                </div>\n              </div>\n\n              <div className=\"timeseries-mode\">\n                <label htmlFor=\"timeseries-mode\">Scale Uniformly</label>\n                <input\n                  type=\"checkbox\"\n                  className=\"switch\"\n                  aria-label=\"Checked by default to scale uniformly.\"\n                  checked={timeseriesMode}\n                  onChange={(event) => {\n                    setTimeseriesMode(!timeseriesMode);\n                  }}\n                />\n              </div>\n            </div>\n\n            <TimeSeries\n              timeseries={timeseries}\n              type={graphOption}\n              mode={timeseriesMode}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar(props) {\n  // HTML Properties for each of the links in UI\n  const navLinkProps = (path, animationDelay) => ({\n    className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n    style: {\n      animationDelay: `${animationDelay}s`,\n    },\n  });\n\n  if (window.location.pathname !== '/summary') {\n    return (\n      <div\n        className=\"Navbar\"\n        style={{\n          animationDelay: '0.5s',\n          height: window.location.pathname === '/clusters' ? '2.5rem' : '',\n          transition: 'all 0.3s ease-in-out',\n        }}\n      >\n        <img\n          className=\"fadeInUp logo\"\n          alt=\"India COVID-19 Tracker\"\n          src=\"/icon.png\"\n          style={{\n            animationDelay: '0.0s',\n            width: window.location.pathname === '/clusters' ? '1.5rem' : '',\n            height: window.location.pathname === '/clusters' ? '1.5rem' : '',\n            transition: 'all 0.3s ease-in-out',\n          }}\n        />\n\n        <div className=\"navbar-left\">\n          {props.pages.map((page, i) => {\n            return (\n              <Link to={page.pageLink} key={i}>\n                <span\n                  {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n                >\n                  {page.displayName}\n                </span>\n              </Link>\n            );\n          })}\n        </div>\n\n        <div className=\"navbar-right\"></div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Links(props) {\n  return (\n    <div className=\"Links\">\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <h3>HELPLINE NUMBERS [by State]</h3>\n        <a href=\"https://www.mohfw.gov.in/coronvavirushelplinenumber.pdf\">\n          https://www.mohfw.gov.in/coronvavirushelplinenumber.pdf\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\n        <a href=\"https://www.mohfw.gov.in/\">https://www.mohfw.gov.in/</a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.4s'}}>\n        <h3>WHO : COVID-19 Home Page</h3>\n        <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\">\n          https://www.who.int/emergencies/diseases/novel-coronavirus-2019\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <h3>CDC</h3>\n        <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\">\n          https://www.cdc.gov/coronavirus/2019-ncov/faq.html\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <h3>COVID-19 Global Tracker</h3>\n        <a href=\"https://coronavirus.thebaselab.com/\">\n          https://coronavirus.thebaselab.com/\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Links;\n","import React from 'react';\n\nfunction Cluster(props) {\n  return (\n    <div className=\"iframe-container\" referrerPolicy=\"no-referrer\" width=\"100%\">\n      <iframe title=\"clusters\" src=\"https://cluster.covid19india.org\"></iframe>\n    </div>\n  );\n}\n\nexport default Cluster;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction FAQ(props) {\n  const [faq, setFaq] = useState([]);\n\n  useEffect(() => {\n    getFAQs();\n  }, []);\n\n  const getFAQs = () => {\n    axios\n      .get('https://api.covid19india.org/faq.json')\n      .then((response) => {\n        setFaq(response.data.faq);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"FAQ\">\n      {faq.map((faq, index) => {\n        return (\n          <div\n            key={index}\n            className=\"faq fadeInUp\"\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\n          >\n            <h2 className=\"question\">{faq.question}</h2>\n            <h2 className=\"answer\">{faq.answer}</h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FAQ;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport axios from 'axios';\n\nfunction Banner(props) {\n  const [snippets, setSnippets] = useState([]);\n  const [snippet, setSnippet] = useState();\n\n  useEffect(() => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setSnippets(response.data.factoids || []);\n        setSnippet(response.data.factoids[0] || '');\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const snippetChooser = useCallback(\n    (min, max) => {\n      const index = Math.random() * (max - min) + min;\n      setSnippet(snippets[Math.floor(index)]);\n    },\n    [snippets]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      snippetChooser(0, snippets.length - 1);\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [snippetChooser, snippets]);\n\n  return (\n    <div\n      onClick={() => snippetChooser(0, snippets.length - 1)}\n      className=\"Banner fadeInUp\"\n      style={{animationDelay: '0.2s'}}\n    >\n      <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\n    </div>\n  );\n}\n\nexport default Banner;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport * as Icon from 'react-feather';\n\nimport './App.scss';\n\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport Links from './components/links';\nimport Cluster from './components/cluster';\nimport FAQ from './components/faq';\nimport Banner from './components/banner';\n/* import PatientDB from './components/patientdb';*/\n\nconst history = require('history').createBrowserHistory;\n\nfunction App() {\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n    },\n    /* {\n      pageLink: '/patientsDB',\n      view: PatientDB,\n      displayName: 'Patients DB',\n      animationDelayForNavbar: 0.3,\n    },*/\n    {\n      pageLink: '/clusters',\n      view: Cluster,\n      displayName: 'Clusters',\n      animationDelayForNavbar: 0.4,\n    },\n    {\n      pageLink: '/links',\n      view: Links,\n      displayName: 'Helpful Links',\n      animationDelayForNavbar: 0.5,\n    },\n    {\n      pageLink: '/faq',\n      view: FAQ,\n      displayName: 'FAQ',\n      animationDelayForNavbar: 0.6,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar pages={pages} />\n              <Banner />\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n                {pages.map((page, i) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={i}\n                    />\n                  );\n                })}\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n        <img\n          src=\"/icon.png\"\n          alt=\"https://www.covid19india.org | Coronavirus cases live dashboard\"\n        />\n        <h5>We stand with everyone fighting on the frontlines</h5>\n        <div className=\"link\">\n          <a href=\"https://github.com/covid19india\">covid19india</a>\n        </div>\n        <div id=\"footerButtons\">\n          <a\n            className=\"button\"\n            href=\"https://bit.ly/patientdb\"\n            target=\"_noblank\"\n          >\n            <Icon.Database />\n            <span>Crowdsourced Patient Database&nbsp;</span>\n          </a>\n          <a\n            href=\"https://bit.ly/covid19crowd\"\n            className=\"button telegram\"\n            target=\"_noblank\"\n          >\n            <Icon.MessageCircle />\n            <span>Join Telegram to Collaborate!</span>\n          </a>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}