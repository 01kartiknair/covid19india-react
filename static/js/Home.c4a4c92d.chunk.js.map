{"version":3,"sources":["components/footer.js","components/tooltips.js","components/level.js","components/minigraph.js","components/legend.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","utils/hooks.js","components/timeseriesexplorer.js","components/search.js","components/row.js","components/table.js","components/updates.js","components/home.js"],"names":["React","memo","props","t","useTranslation","className","style","animationDelay","href","target","rel","justifyContent","testedToolTip","onClick","e","stopPropagation","data-for","data-tip","data-event","data-event-off","id","place","type","effect","multiline","scrollHide","globalEventOff","useState","data","setData","useEffectOnce","active","confirmed","recovered","deaths","deltaconfirmed","deltadeaths","deltarecovered","isNaN","formatNumber","timeseries","timeSeriesData","setTimeSeriesData","svgRef1","useRef","svgRef2","svgRef3","svgRef4","useEffect","slice","length","graphData","useCallback","margin","chartRight","chartBottom","svg1","d3","current","svg2","svg3","svg4","forEach","d","dailyconfirmed","dailyrecovered","dailydeceased","xScale","domain","date","range","svgArray","dataTypes","colors","dailyMin","dailyactive","dailyMax","Math","max","domainMinMax","yScale","svg","i","color","path","append","datum","attr","x","y","curve","totalLength","node","getTotalLength","transition","delay","duration","selectAll","enter","on","ref","width","height","viewBox","preserveAspectRatio","ramp","n","canvas","context","getContext","fillStyle","fillRect","legend","title","tickSize","marginTop","marginRight","marginBottom","marginLeft","ticks","tickFormat","tickValues","ordinalWeights","tickAdjust","g","interpolate","min","copy","rangeRound","select","toDataURL","interpolator","Object","assign","undefined","round","map","invertExtent","thresholds","quantiles","thresholdFormat","join","widthScale","reduce","a","b","xPos","w","acc","bandwidth","call","remove","text","ChoroplethMap","statistic","mapData","currentMap","changeMap","regionHighlighted","setRegionHighlighted","isCountryLoaded","mapOption","choroplethMap","choroplethLegend","mapMeta","MAP_META","name","ready","geoData","topologyStates","mapType","MAP_TYPES","COUNTRY","topojson","objects","graphObjectStates","features","topologyDistricts","view","MAP_VIEWS","DISTRICTS","graphObjectDistricts","topology","STATES","projection","widthStyle","parseInt","fitWidth","heightStyle","fitSize","bBox","bounds","split","colorScale","svgLegend","widthLegend","heightLegend","stat","MAP_STATISTICS","ZONE","values","clamp","capitalizeAll","PER_MILLION","TOTAL","Number","isInteger","featureStates","f","state","properties","st_nm","obj","featureDistricts","district","onceTouchedRegion","regionSelection","sel","isHovered","this","classed","region","STATE","parseFloat","total","toFixed","toString","parentNode","appendChild","meshStates","meshDistricts","geoDataFile","paths","nodes","highlightRegionInMap","Fragment","Unknown","position","colorInterpolationFilters","getRegionFromState","mapName","states","districts","zones","stateTestData","anchor","setAnchor","setMapOption","setCurrentMap","currentMapMeta","useMemo","currentMapData","dtype","keys","acc1","acc2","zone","typeCount","STATE_POPULATIONS","districtWiseData","districtData","Total","find","getRegionFromDistrict","hoveredRegion","panelRegion","hoveredRegionCount","hoveredRegionZone","switchMapToState","newMapMeta","topDistrict","filter","sort","ReactDOM","unstable_batchedUpdates","testObj","totaltested","display","window","innerWidth","parse","updatedon","Date","format","source","lastupdatedtime","formatDate","formatDistance","to","STATE_CODES_REVERSE","prevProps","currProps","equal","timeseriesProp","chartType","mode","logMode","stateCode","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","index","setIndex","moving","setMoving","svgRef5","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","entries","observer","entry","contentRect","observe","unobserve","useResizeObserver","transformTimeSeries","slicedTimeseries","sliceTimeseriesFromEnd","T","yScales","svg5","dateMin","subDays","dateMax","addDays","numTicksX","xAxis","xAxis2","yAxis","tickPadding","plotTotal","dataTypesTotal","dataTypesDaily","uniformScaleMin","totalactive","totalrecovered","totaldeceased","uniformScaleMax","totalconfirmed","yScaleUniformLinear","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","typeTotal","typeDaily","filteredTimeseries","reverse","p","getPointAtLength","repeat","mousemove","mouseout","xm","invert","bisectDate","left","j","dateStr","chartKey1","chartKey2","chartKey3","chartKey4","chartKey5","currentStatusCount","currentDiff","formatedDiff","aria-label","isIntersecting","activeStateCode","onHighlightState","useLocalStorage","setChartType","isTimeseriesIntersecting","setIsTimeseriesIntersecting","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","options","rootMargin","onChange","htmlFor","checked","event","disabled","value","selectedState","selectedOptions","getAttribute","JSON","s","statecode","key","statedata","stringify","engine","Bloodhound","initialize","local","STATE_CODES_ARRAY","queryTokenizer","tokenizers","whitespace","datumTokenizer","districtEngine","limit","indexRemote","remote","url","transform","response","stateName","districtName","push","essentialsEngine","resources","focused","suggestions","districtZones","searchValue","setSearchValue","expand","setExpand","results","setResults","searchInput","handleSearch","search","datums","result","stateObj","route","code","districtObj","essentialsObj","nameoftheorganisation","category","website","contact","description","descriptionandorserviceprovided","city","phonenumber","setNativeValue","element","valueSetter","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","useDebounce","targetInput","document","getElementById","loopThroughSuggestions","textContent","fillPlaceholder","cursorPosition","callback","placeholder","classList","setTimeout","clearPlaceholder","add","onFocus","onBlur","STATE_CODES","classnames","toLowerCase","size","match","onMouseDown","preventDefault","dispatchEvent","Event","bubbles","useBreakpoint","createBreakpoint","XL","L","S","StateCell","ArrowUp","DistrictHeaderCell","handleSort","sortData","breakpoint","capitalize","abbreviate","sortColumn","isAscending","DistrictCell","delta","DistrictRow","onHighlightDistrict","sortedDistricts","onMouseEnter","notes","DISTRICT_ROW_STATISTICS","setSortedDistricts","showDistricts","setShowDistricts","setSortData","history","useHistory","Chevron","rotateRightDown","rotateDownRight","_onHighlightState","doSort","sorted","district1","district2","localeCompare","newSortData","statenotes","STATE_ROW_STATISTICS","colSpan","paddingBottom","align","StateHeaderCell","sortedStates","setSortedStates","FineprintTop","FineprintBottom","newSortedStates","newDate","currentDate","Updates","updates","setUpdates","axios","get","then","catch","err","console","log","useLayoutEffect","activity","update","replace","activityDate","timestamp","getDate","dangerouslySetInnerHTML","__html","Home","setStates","stateDistrictWiseData","setStateDistrictWiseData","setDistrictZones","setStateTestData","lastUpdated","setLastUpdated","fetched","setFetched","showUpdates","setShowUpdates","lastViewedLog","setLastViewedLog","newUpdate","setNewUpdate","Bell","BellOff","getStates","lastTimestamp","Promise","all","statesDailyResponse","zonesResponse","stateDistrictWiseResponse","statewise","parseDistrictZones","ts","parseStateTimeseries","preprocessTimeseries","cases_time_series","testTs","parseStateTestTimeseries","states_tested_data","parseTotalTestTimeseries","tested","tsMerged","mergeTimeseries","testData","totalTest","updatetimestamp","totalsamplestested","Helmet","content","formatDateAbsolute","summary"],"mappings":"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","file":"static/js/Home.c4a4c92d.chunk.js","sourcesContent":["import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>{t('We stand with everyone fighting on the frontlines')}</h5>\n\n      <div className=\"link\">\n        <a\n          href=\"https://github.com/covid19india\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          covid19india\n        </a>\n      </div>\n\n      <a\n        href=\"https://github.com/covid19india/covid19india-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>Open Sourced on GitHub</span>\n      </a>\n\n      <a\n        className=\"button excel\"\n        href=\"http://patientdb.covid19india.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>Crowdsourced Patient Database&nbsp;</span>\n      </a>\n\n      <a\n        href=\"https://twitter.com/covid19indiaorg\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button twitter\"\n        style={{justifyContent: 'center'}}\n      >\n        <Icon.Twitter />\n        <span>View updates on Twitter</span>\n      </a>\n\n      <a\n        href=\"https://bit.ly/covid19crowd\"\n        className=\"button telegram\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.MessageCircle />\n        <span>Join Telegram to Collaborate!</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport ReactTooltip from 'react-tooltip';\n\nexport const testedToolTip = (\n  <span className=\"tooltip-tested\" onClick={(e) => e.stopPropagation()}>\n    <Icon.Info\n      data-for=\"tested\"\n      data-tip=\"Reporting total samples tested from ICMR data\"\n      data-event=\"touchstart mouseover\"\n      data-event-off=\"mouseleave\"\n    />\n    <ReactTooltip\n      id=\"tested\"\n      place=\"top\"\n      type=\"dark\"\n      effect=\"solid\"\n      multiline={true}\n      scrollHide={true}\n      globalEventOff=\"click\"\n    />\n  </span>\n);\n","import {formatNumber} from '../utils/commonfunctions';\n\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useEffectOnce} from 'react-use';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  const {t} = useTranslation();\n\n  useEffectOnce(() => {\n    setData({\n      active: +props.data.active,\n      confirmed: +props.data.confirmed,\n      recovered: +props.data.recovered,\n      deaths: +props.data.deaths,\n      deltaconfirmed: +props.data.deltaconfirmed,\n      deltadeaths: +props.data.deltadeaths,\n      deltarecovered: +props.data.deltarecovered,\n    });\n  });\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>{t('Confirmed')}</h5>\n        <h4>\n          [\n          {isNaN(data.deltaconfirmed)\n            ? ''\n            : data.deltaconfirmed > 0\n            ? '+' + formatNumber(data.deltaconfirmed)\n            : '+0'}\n          ]\n        </h4>\n        <h1>{formatNumber(data.confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">{t('Active')}</h5>\n        <h4>&nbsp;</h4>\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">{t('Recovered')}</h5>\n        <h4>\n          [\n          {isNaN(data.deltarecovered)\n            ? ''\n            : data.deltarecovered > 0\n            ? '+' + formatNumber(data.deltarecovered)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">\n          {formatNumber(data.recovered)}{' '}\n        </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">{t('Deceased')}</h5>\n        <h4>\n          [\n          {isNaN(data.deltadeaths)\n            ? ''\n            : data.deltadeaths > 0\n            ? '+' + formatNumber(data.deltadeaths)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Level);\n","import * as d3 from 'd3';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback((data) => {\n    if (data.length <= 1) return 0;\n\n    const margin = {top: 10, right: 5, bottom: 20, left: 5};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n\n    data.forEach((d) => {\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\n    });\n\n    const xScale = d3\n      .scaleTime()\n      .domain(d3.extent(data, (d) => d.date))\n      .range([margin.left, chartRight]);\n\n    const svgArray = [svg1, svg2, svg3, svg4];\n    const dataTypes = [\n      'dailyconfirmed',\n      'dailyactive',\n      'dailyrecovered',\n      'dailydeceased',\n    ];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\n    const dailyMax = d3.max(data, (d) =>\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n    );\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    svgArray.forEach((svg, i) => {\n      const type = dataTypes[i];\n      const color = colors[i];\n\n      const path = svg\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', color + '99')\n        .attr('stroke-width', 2.5)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => xScale(d.date))\n            .y((d) => yScale(d[type]))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength = path.node().getTotalLength();\n      path\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', color)\n        .attr('stroke', color)\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => xScale(d.date))\n        .attr('cy', (d) => yScale(d[type]))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    });\n  }, []);\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={svgRef1}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={svgRef2}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={svgRef3}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={svgRef4}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Minigraph);\n","/* Source: https://observablehq.com/@d3/color-legend */\n\nimport * as d3 from 'd3';\n\nfunction legend({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  svg,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  if (!svg)\n    svg = d3\n      .create('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', [0, 0, width, height])\n      .style('overflow', 'visible')\n      .style('display', 'block');\n\n  const t = svg.transition().duration(500);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg.selectAll('rect').transition(t).attr('opacity', 0);\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = d3\n        .scaleBand()\n        .domain(color.domain())\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = d3\n        .scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = d3.scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = d3.select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default legend;\n","import legend from './legend';\n\nimport {MAP_META, MAP_STATISTICS, MAP_TYPES, MAP_VIEWS} from '../constants';\nimport {capitalizeAll, formatNumber} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport React, {useCallback, useEffect, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport * as topojson from 'topojson';\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  currentMap,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  isCountryLoaded,\n  mapOption,\n}) {\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n\n  const mapMeta = MAP_META[currentMap.name];\n\n  const ready = useCallback(\n    (geoData) => {\n      const svg = d3.select(choroplethMap.current);\n\n      const topologyStates =\n        mapMeta.mapType === MAP_TYPES.COUNTRY\n          ? topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectStates]\n            )\n          : {features: []};\n      const topologyDistricts =\n        currentMap.view === MAP_VIEWS.DISTRICTS\n          ? topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectDistricts]\n            )\n          : {features: []};\n\n      const topology =\n        currentMap.view === MAP_VIEWS.STATES\n          ? topologyStates\n          : topologyDistricts;\n\n      const projection = d3.geoMercator();\n\n      // Set size of the map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr('viewBox')) {\n        const widthStyle = parseInt(svg.style('width'));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style('height'));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr('viewBox').split(' ');\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* Legend */\n      const svgLegend = d3.select(choroplethLegend.current);\n      const widthLegend = parseInt(svgLegend.style('width'));\n      const heightLegend = +svgLegend.attr('height');\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\n\n      // Colorbar\n      let colorScale;\n      if (currentMap.stat === MAP_STATISTICS.ZONE) {\n        colorScale = d3.scaleOrdinal(\n          ['Red', 'Orange', 'Green'],\n          ['#d73027', '#fee08b', '#66bd63']\n        );\n\n        svgLegend.call(() =>\n          legend({\n            color: colorScale,\n            width: widthLegend,\n            height: heightLegend,\n            tickValues: [],\n            marginLeft: 2,\n            marginRight: 20,\n            svg: svgLegend,\n            ordinalWeights: Object.values(statistic),\n          })\n        );\n      } else {\n        const colorInterpolator = (t) => {\n          switch (mapOption) {\n            case 'confirmed':\n              return d3.interpolateReds(t * 0.85);\n            case 'active':\n              return d3.interpolateBlues(t * 0.85);\n            case 'recovered':\n              return d3.interpolateGreens(t * 0.85);\n            case 'deceased':\n              return d3.interpolateGreys(t * 0.85);\n            default:\n              return;\n          }\n        };\n        colorScale = d3\n          .scaleSequential(\n            [0, Math.max(1, statistic[mapOption].max)],\n            colorInterpolator\n          )\n          .clamp(true);\n        svgLegend.call(() =>\n          legend({\n            color: colorScale,\n            title:\n              capitalizeAll(mapOption) +\n              (currentMap.stat === MAP_STATISTICS.PER_MILLION\n                ? ' cases per million'\n                : ' cases'),\n            width: widthLegend,\n            height: heightLegend,\n            ticks: 6,\n            tickFormat: function (d, i, n) {\n              if (\n                currentMap.stat === MAP_STATISTICS.TOTAL &&\n                !Number.isInteger(d)\n              )\n                return;\n              if (i === n.length - 1) return formatNumber(d) + '+';\n              return formatNumber(d);\n            },\n            marginLeft: 2,\n            marginRight: 20,\n            svg: svgLegend,\n          })\n        );\n      }\n      svgLegend.attr(\n        'class',\n        currentMap.stat === MAP_STATISTICS.ZONE ? 'zone' : ''\n      );\n\n      // Add id to each feature\n      const featureStates = topologyStates.features.map((f) => {\n        const state = f.properties.st_nm;\n        const obj = Object.assign({}, f);\n        obj.id = `${mapMeta.graphObjectStates}-${state}`;\n        return obj;\n      });\n\n      // Add id to each feature\n      const featureDistricts = topologyDistricts.features.map((f) => {\n        const district = f.properties.district;\n        const state = f.properties.st_nm;\n        const obj = Object.assign({}, f);\n        obj.id = `${mapMeta.graphObjectDistricts}-${state}${district}`;\n        return obj;\n      });\n\n      /* Draw map */\n      const t = svg.transition().duration(500);\n      let onceTouchedRegion = null;\n      const regionSelection = svg\n        .select(currentMap.view === MAP_VIEWS.STATES ? '.states' : '.districts')\n        .selectAll('path')\n        .data(\n          currentMap.view === MAP_VIEWS.STATES\n            ? featureStates\n            : featureDistricts,\n          (d) => d.id\n        )\n        .join((enter) => {\n          const sel = enter.append('path').attr('d', path);\n          sel.append('title');\n          return sel;\n        })\n        .attr('class', function (d) {\n          const isHovered = d3.select(this).classed('map-hover');\n          return `path-region ${mapOption} ${isHovered ? 'map-hover' : ''}`;\n        })\n        .style('cursor', 'pointer')\n        .on('mouseenter', function (d) {\n          const region = {state: d.properties.st_nm};\n          if (d.properties.district) region.district = d.properties.district;\n          setRegionHighlighted(region);\n        })\n        .on('mouseleave', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', handleClick)\n        .attr('pointer-events', 'none');\n\n      regionSelection.select('title').text(function (d) {\n        if (currentMap.stat === MAP_STATISTICS.TOTAL) {\n          const state = d.properties.st_nm;\n          const district = d.properties.district;\n          let n;\n          if (district)\n            n =\n              mapData[state] && mapData[state][district]\n                ? mapData[state][district][mapOption]\n                : 0;\n          else n = mapData[state] ? mapData[state][mapOption] : 0;\n          return (\n            Number(\n              parseFloat(\n                100 * (n / (statistic[mapOption].total || 0.001))\n              ).toFixed(2)\n            ).toString() +\n            '% from ' +\n            capitalizeAll(district ? district : state)\n          );\n        }\n      });\n\n      regionSelection\n        .transition(t)\n        .attr('fill', function (d) {\n          let n;\n          if (currentMap.stat === MAP_STATISTICS.ZONE) {\n            const state = d.properties.st_nm;\n            const district = d.properties.district;\n            n =\n              mapData[state] && mapData[state][district]\n                ? mapData[state][district]\n                : 0;\n          } else {\n            const state = d.properties.st_nm;\n            const district = d.properties.district;\n            if (district)\n              n =\n                mapData[state] &&\n                mapData[state][district] &&\n                mapData[state][district][mapOption]\n                  ? mapData[state][district][mapOption]\n                  : 0;\n            else\n              n =\n                mapData[state] && mapData[state][mapOption]\n                  ? mapData[state][mapOption]\n                  : 0;\n          }\n          const color = n === 0 ? '#ffffff00' : colorScale(n);\n          return color;\n        })\n        .attr('stroke', function () {\n          const isHovered = d3.select(this).classed('map-hover');\n          if (isHovered) this.parentNode.appendChild(this);\n          if (currentMap.stat === MAP_STATISTICS.ZONE) {\n            return isHovered ? '#343a40' : null;\n          } else {\n            return isHovered\n              ? `${\n                  mapOption === 'confirmed'\n                    ? '#ff073a'\n                    : mapOption === 'active'\n                    ? '#007bff'\n                    : mapOption === 'recovered'\n                    ? '#28a745'\n                    : mapOption === 'deceased'\n                    ? '#6c757d'\n                    : ''\n                }`\n              : null;\n          }\n        })\n        .transition()\n        .attr('pointer-events', 'all');\n\n      svg\n        .transition()\n        .duration(mapMeta.mapType === MAP_TYPES.STATE ? 250 : 0)\n        .on('end', () =>\n          svg.attr(\n            'class',\n            currentMap.stat === MAP_STATISTICS.ZONE ? 'zone' : ''\n          )\n        );\n\n      let meshStates = [];\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n        meshStates = [\n          topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectStates]),\n        ];\n        meshStates[0].id = mapMeta.graphObjectStates;\n      }\n      let meshDistricts = [];\n      if (currentMap.view === MAP_VIEWS.DISTRICTS) {\n        // Add id to mesh\n        meshDistricts = [\n          topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectDistricts]),\n        ];\n        meshDistricts[0].id = mapMeta.graphObjectDistricts;\n      }\n      svg\n        .select(\n          currentMap.view === MAP_VIEWS.STATES\n            ? '.state-borders'\n            : '.district-borders'\n        )\n        .selectAll('path')\n        .data(\n          currentMap.view === MAP_VIEWS.STATES ? meshStates : meshDistricts,\n          (d) => d.id\n        )\n        .join((enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', width / 250)\n        )\n        .attr('fill', 'none')\n        .transition(t)\n        .attr('stroke-width', function () {\n          return mapMeta.mapType === MAP_TYPES.COUNTRY &&\n            currentMap.view === MAP_VIEWS.DISTRICTS\n            ? 0\n            : width / 250;\n        })\n        .attr('stroke', function () {\n          if (currentMap.stat === MAP_STATISTICS.ZONE) {\n            return '#00000060';\n          } else {\n            return `${\n              mapOption === 'confirmed'\n                ? '#ff073a30'\n                : mapOption === 'active'\n                ? '#007bff30'\n                : mapOption === 'recovered'\n                ? '#28a74530'\n                : mapOption === 'deceased'\n                ? '#6c757d30'\n                : ''\n            }`;\n          }\n        });\n\n      svg\n        .select(currentMap.view === MAP_VIEWS.STATES ? '.districts' : '.states')\n        .selectAll('path')\n        .data(\n          currentMap.view === MAP_VIEWS.STATES\n            ? featureDistricts\n            : featureStates,\n          (d) => d.id\n        )\n        .join((enter) => enter.append('path').attr('d', path))\n        .attr('class', 'path-region')\n        .attr('fill', 'none')\n        .attr('stroke', 'none')\n        .attr('pointer-events', 'none');\n\n      svg\n        .select(\n          currentMap.view === MAP_VIEWS.STATES\n            ? '.district-borders'\n            : '.state-borders'\n        )\n        .selectAll('path')\n        .data(\n          currentMap.view === MAP_VIEWS.STATES ? meshDistricts : meshStates,\n          (d) => d.id\n        )\n        .join((enter) => enter.append('path').attr('d', path))\n        .attr('fill', 'none')\n        .transition(t)\n        .attr('stroke-width', width / 250)\n        .attr('stroke', '#343a4099');\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.selectAll('.path-region').attr('pointer-events', 'none');\n        // Switch map\n        changeMap(d.properties.st_nm);\n      }\n\n      // Reset on tapping outside map\n      svg.attr('pointer-events', 'auto').on('click', () => {\n        if (mapMeta.mapType !== MAP_TYPES.STATE) {\n          setRegionHighlighted({\n            state: 'Total',\n          });\n        }\n      });\n    },\n    [\n      mapMeta,\n      currentMap.stat,\n      currentMap.view,\n      statistic,\n      mapOption,\n      isCountryLoaded,\n      mapData,\n      setRegionHighlighted,\n      changeMap,\n    ]\n  );\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n      }\n    })();\n  }, [mapMeta, statistic, ready]);\n\n  useEffect(() => {\n    const highlightRegionInMap = (region) => {\n      const paths = d3.selectAll('.path-region');\n      paths.attr('stroke', null);\n      paths.classed('map-hover', (d, i, nodes) => {\n        if (\n          region.district === d.properties?.district &&\n          region.state === d.properties.st_nm\n        ) {\n          nodes[i].parentNode.appendChild(nodes[i]);\n          d3.select(nodes[i]).attr('stroke', function (d) {\n            if (currentMap.stat === MAP_STATISTICS.ZONE) return '#343a40';\n            return d3.select(this).classed('confirmed')\n              ? '#ff073a'\n              : d3.select(this).classed('active')\n              ? '#007bff'\n              : d3.select(this).classed('recovered')\n              ? '#28a745'\n              : d3.select(this).classed('deceased')\n              ? '#6c757d'\n              : null;\n          });\n          return true;\n        }\n        return false;\n      });\n    };\n    highlightRegionInMap(regionHighlighted);\n  }, [regionHighlighted, currentMap.stat]);\n\n  return (\n    <React.Fragment>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg id=\"chart\" preserveAspectRatio=\"xMidYMid meet\" ref={choroplethMap}>\n          <g className=\"states\" />\n          <g className=\"districts\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n        mapData[currentMap.name]?.Unknown &&\n        mapData[currentMap.name]?.Unknown[mapOption] ? (\n          <div className=\"disclaimer\">\n            <Icon.AlertCircle />\n            {`District-wise ${mapOption} numbers are under reconciliation`}\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        <svg\n          id=\"legend\"\n          height=\"50\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        >\n          <image className=\"ramp\" />\n          <g className=\"axis\">\n            <text className=\"axistext\" />\n          </g>\n        </svg>\n        <canvas\n          className=\"color-scale\"\n          style={{position: 'absolute', height: 0}}\n        />\n      </div>\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549 0 0 0 0.08627451 0 0.91372549 0 0 0.08627451 0 0 0.854901961 0 0.145098039 0 0 0 1 0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default ChoroplethMap;\n","import ChoroplethMap from './choropleth';\nimport {testedToolTip} from './tooltips';\n\nimport {\n  MAP_META,\n  MAP_STATISTICS,\n  MAP_TYPES,\n  MAP_VIEWS,\n  STATE_CODES_REVERSE,\n  STATE_POPULATIONS,\n} from '../constants';\nimport {formatDate, formatNumber} from '../utils/commonfunctions';\n\nimport {formatDistance, format, parse} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\n    return false;\n  }\n  if (!equal(prevProps.mapOption, currProps.mapOption)) {\n    return false;\n  }\n  if (!equal(prevProps.anchor, currProps.anchor)) {\n    return false;\n  }\n  return true;\n};\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  return region;\n};\n\nfunction MapExplorer({\n  mapName,\n  states,\n  districts,\n  zones,\n  stateTestData,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  mapOption,\n  setMapOption,\n  isCountryLoaded = true,\n}) {\n  const {t} = useTranslation();\n  const [currentMap, setCurrentMap] = useState({\n    name: mapName,\n    stat: MAP_STATISTICS.TOTAL,\n    view:\n      MAP_META[mapName].mapType === MAP_TYPES.COUNTRY\n        ? MAP_VIEWS.STATES\n        : MAP_VIEWS.DISTRICTS,\n  });\n  const currentMapMeta = MAP_META[currentMap.name];\n\n  const [statistic, currentMapData] = useMemo(() => {\n    let currentMapData = {};\n    let statistic = {};\n    if (currentMap.stat === MAP_STATISTICS.ZONE) {\n      const dataTypes = ['Red', 'Orange', 'Green'];\n      statistic = dataTypes.reduce((acc, dtype) => {\n        acc[dtype] = 0;\n        return acc;\n      }, {});\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\n        currentMapData = Object.keys(zones).reduce((acc1, state) => {\n          acc1[state] = Object.keys(zones[state]).reduce((acc2, district) => {\n            const zone = zones[state][district].zone;\n            if (zone) {\n              acc2[district] = zone;\n              statistic[zone] += 1;\n            }\n            return acc2;\n          }, {});\n          return acc1;\n        }, {});\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\n        const state = currentMap.name;\n        currentMapData[state] = Object.keys(zones[state]).reduce(\n          (acc, district) => {\n            const zone = zones[state][district].zone;\n            if (zone) {\n              acc[district] = zone;\n              statistic[zone] += 1;\n            }\n            return acc;\n          },\n          {}\n        );\n      }\n    } else {\n      const dataTypes = ['confirmed', 'active', 'recovered', 'deceased'];\n      statistic = dataTypes.reduce((acc, dtype) => {\n        acc[dtype] = {total: 0, max: 0};\n        return acc;\n      }, {});\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\n        currentMapData = states.reduce((acc, state) => {\n          acc[state.state] = {};\n          dataTypes.forEach((dtype) => {\n            let typeCount =\n              parseInt(state[dtype !== 'deceased' ? dtype : 'deaths']) || 0;\n            if (currentMap.stat === MAP_STATISTICS.PER_MILLION)\n              typeCount = (1e6 * typeCount) / STATE_POPULATIONS[state.state];\n            if (state.state !== 'Total') {\n              statistic[dtype].total += typeCount;\n              if (typeCount > statistic[dtype].max) {\n                statistic[dtype].max = typeCount;\n              }\n            }\n            acc[state.state][dtype] = typeCount;\n          });\n          return acc;\n        }, {});\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\n        const districtWiseData = (\n          districts[currentMap.name] || {districtData: {}}\n        ).districtData;\n        currentMapData[currentMap.name] = Object.keys(districtWiseData).reduce(\n          (acc, district) => {\n            acc[district] = {};\n            dataTypes.forEach((dtype) => {\n              const typeCount = parseInt(districtWiseData[district][dtype]);\n              statistic[dtype].total += typeCount;\n              if (typeCount > statistic[dtype].max) {\n                statistic[dtype].max = typeCount;\n              }\n              acc[district][dtype] = typeCount;\n            });\n            return acc;\n          },\n          {}\n        );\n        currentMapData[currentMap.name].Total = states.find(\n          (state) => currentMap.name === state.state\n        );\n      }\n    }\n    return [statistic, currentMapData];\n  }, [\n    currentMap.name,\n    currentMap.stat,\n    currentMapMeta.mapType,\n    districts,\n    zones,\n    states,\n  ]);\n\n  const [hoveredRegion, panelRegion] = useMemo(() => {\n    if (!regionHighlighted.district) {\n      const state = getRegionFromState(\n        states.find((state) => regionHighlighted.state === state.state)\n      );\n      return [state, state];\n    } else {\n      const stateDistrictObj = districts[regionHighlighted.state] || {\n        districtData: {},\n      };\n      const districtData = stateDistrictObj.districtData[\n        regionHighlighted.district\n      ] || {\n        confirmed: 0,\n        active: 0,\n        recovered: 0,\n        deaths: 0,\n      };\n      const district = getRegionFromDistrict(\n        districtData,\n        regionHighlighted.district\n      );\n      let state = getRegionFromState(\n        states.find((state) => state.state === regionHighlighted.state)\n      );\n      district.district = regionHighlighted.district;\n      district.state = state.state;\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n        state = states.find((state) => state.state === 'Total');\n      return [district, state];\n    }\n  }, [states, districts, currentMapMeta.mapType, regionHighlighted]);\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    if ('district' in regionHighlighted) {\n      if (\n        currentMap.name !== regionHighlighted.state &&\n        !(\n          currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\n          currentMap.view === MAP_VIEWS.DISTRICTS\n        )\n      ) {\n        const state = regionHighlighted.state;\n        const newMapMeta = MAP_META[state];\n        if (!newMapMeta) {\n          return;\n        }\n        setCurrentMap({\n          name: state,\n          view: MAP_VIEWS.DISTRICTS,\n          stat:\n            currentMap.stat === MAP_STATISTICS.PER_MILLION\n              ? MAP_STATISTICS.TOTAL\n              : currentMap.stat,\n        });\n      }\n    } else if (isCountryLoaded && currentMapMeta.mapType === MAP_TYPES.STATE) {\n      setCurrentMap({\n        name: 'India',\n        view:\n          currentMap.stat === MAP_STATISTICS.ZONE\n            ? MAP_VIEWS.DISTRICTS\n            : MAP_VIEWS.STATES,\n        stat: currentMap.stat,\n      });\n    }\n  }, [isCountryLoaded, regionHighlighted, currentMap, currentMapMeta.mapType]);\n\n  const switchMapToState = useCallback(\n    (state) => {\n      const newMapMeta = MAP_META[state];\n      if (!newMapMeta) {\n        return;\n      }\n      if (newMapMeta.mapType === MAP_TYPES.STATE) {\n        const {districtData} = districts[state] || {\n          districtData: {},\n        };\n        const topDistrict = Object.keys(districtData)\n          .filter((state) => state !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        ReactDOM.unstable_batchedUpdates(() => {\n          setRegionHighlighted({\n            district: topDistrict,\n            state: state,\n          });\n          setCurrentMap({\n            name: state,\n            view: MAP_VIEWS.DISTRICTS,\n            stat:\n              currentMap.stat === MAP_STATISTICS.PER_MILLION\n                ? MAP_STATISTICS.TOTAL\n                : currentMap.stat,\n          });\n        });\n      } else {\n        ReactDOM.unstable_batchedUpdates(() => {\n          setCurrentMap({\n            name: 'India',\n            view:\n              currentMap.stat === MAP_STATISTICS.ZONE\n                ? MAP_VIEWS.DISTRICTS\n                : MAP_VIEWS.STATES,\n            stat: currentMap.stat,\n          });\n          setRegionHighlighted({\n            state: 'Total',\n          });\n        });\n      }\n    },\n    [currentMap.stat, districts, setRegionHighlighted]\n  );\n\n  const testObj = useMemo(\n    () =>\n      stateTestData.find(\n        (obj) => obj.state === panelRegion.state && obj.totaltested !== ''\n      ),\n    [stateTestData, panelRegion]\n  );\n\n  let hoveredRegionCount;\n  let hoveredRegionZone;\n  if (currentMap.stat !== MAP_STATISTICS.ZONE) {\n    const data =\n      hoveredRegion.district && currentMapData[hoveredRegion.state]\n        ? currentMapData[hoveredRegion.state][hoveredRegion.district]\n        : hoveredRegion.state !== currentMap.name\n        ? currentMapData[hoveredRegion.state]\n        : currentMapData[hoveredRegion.state].Total;\n    hoveredRegionCount = data\n      ? currentMap.stat === MAP_STATISTICS.PER_MILLION\n        ? Number(parseFloat(data[mapOption]).toFixed(2))\n        : data[mapOption]\n      : 0;\n  } else {\n    hoveredRegionZone =\n      zones[hoveredRegion.state] &&\n      zones[hoveredRegion.state][hoveredRegion.district]\n        ? zones[hoveredRegion.state][hoveredRegion.district].zone\n        : '';\n  }\n\n  return (\n    <div\n      className={`MapExplorer fadeInUp ${\n        anchor === 'mapexplorer' ? 'stickied' : ''\n      }`}\n      style={{\n        animationDelay: '1.5s',\n        display: anchor === 'timeseries' ? 'none' : '',\n      }}\n    >\n      {window.innerWidth > 769 && (\n        <div\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\n          onClick={() => {\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\n          }}\n        >\n          <Icon.Anchor />\n        </div>\n      )}\n      <div className=\"header\">\n        <h1>\n          {t(currentMap.name)} {t('Map')}\n        </h1>\n        <h6>\n          {window.innerWidth <= 769 ? t('Tap') : t('Hover')} over a{' '}\n          {currentMapMeta.mapType === MAP_TYPES.COUNTRY\n            ? t('state/UT')\n            : t('district')}{' '}\n          {t('for more details')}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div\n          className={`stats fadeInUp ${\n            mapOption === 'confirmed' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2s'}}\n          onClick={() => setMapOption('confirmed')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('Cnfmd') : t('Confirmed')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-blue fadeInUp ${\n            mapOption === 'active' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.1s'}}\n          onClick={() => setMapOption('active')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('Actv') : t('Active')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-green fadeInUp ${\n            mapOption === 'recovered' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.2s'}}\n          onClick={() => setMapOption('recovered')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('Rcvrd') : t('Recovered')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-gray fadeInUp ${\n            mapOption === 'deceased' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.3s'}}\n          onClick={() => setMapOption('deceased')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('Dcsd') : t('Deceased')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-purple tested fadeInUp\"\n          style={{animationDelay: '2.4s'}}\n        >\n          <h5>{t('Tested')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(testObj?.totaltested)}</h1>\n          </div>\n          <h6 className=\"timestamp\">\n            {!isNaN(parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()))\n              ? `${t('As of')} ${format(\n                  parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()),\n                  'dd MMM'\n                )}`\n              : ''}\n          </h6>\n          {testObj?.totaltested?.length > 1 && (\n            <a href={testObj.source} target=\"_noblank\">\n              <Icon.Link />\n            </a>\n          )}\n          {panelRegion.state === 'Total' ? testedToolTip : ''}\n        </div>\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2\n          className={`${\n            currentMap.stat !== MAP_STATISTICS.ZONE\n              ? mapOption !== 'confirmed'\n                ? mapOption\n                : ''\n              : hoveredRegionZone\n          }`}\n        >\n          {hoveredRegion.district\n            ? t(hoveredRegion.district)\n            : t(hoveredRegion.state)}\n        </h2>\n\n        {currentMapMeta.mapType !== MAP_TYPES.STATE &&\n          panelRegion.lastupdatedtime && (\n            <div className=\"last-update\">\n              <h6>{t('Last updated')}</h6>\n              <h3>\n                {isNaN(Date.parse(formatDate(panelRegion.lastupdatedtime)))\n                  ? ''\n                  : formatDistance(\n                      new Date(formatDate(panelRegion.lastupdatedtime)),\n                      new Date()\n                    ) +\n                    ' ' +\n                    t('ago')}\n              </h3>\n            </div>\n          )}\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\n          <Link to={`state/${STATE_CODES_REVERSE[panelRegion.state]}`}>\n            <div className=\"button state-page-button\">\n              <abbr>{t('Visit state page')}</abbr>\n              <Icon.ArrowRightCircle />\n            </div>\n          </Link>\n        ) : null}\n\n        {currentMap.stat !== MAP_STATISTICS.ZONE &&\n        (currentMapMeta.mapType === MAP_TYPES.STATE ||\n          (currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\n            currentMap.stat !== MAP_STATISTICS.TOTAL)) ? (\n          <h1\n            className={`district ${mapOption !== 'confirmed' ? mapOption : ''}`}\n          >\n            {hoveredRegionCount}\n            <br />\n            <span>\n              {mapOption}{' '}\n              {currentMap.stat === MAP_STATISTICS.PER_MILLION\n                ? ` ${t('per million')}`\n                : ''}\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown &&\n        currentMapData.Unknown[mapOption] > 0 ? (\n          <h4 className=\"unknown\">\n            {t('Districts unknown for')} {currentMapData.Unknown[mapOption]}{' '}\n            {t('people')}\n          </h4>\n        ) : null}\n      </div>\n\n      <div>\n        {mapOption && (\n          <ChoroplethMap\n            statistic={statistic}\n            currentMap={currentMap}\n            mapData={currentMapData}\n            regionHighlighted={regionHighlighted}\n            setRegionHighlighted={setRegionHighlighted}\n            changeMap={switchMapToState}\n            isCountryLoaded={isCountryLoaded}\n            mapOption={mapOption}\n          />\n        )}\n      </div>\n\n      <div className=\"tabs-map\">\n        <div\n          className={`tab ${\n            currentMap.stat === MAP_STATISTICS.TOTAL ? 'focused' : ''\n          }`}\n          onClick={() => {\n            setCurrentMap({\n              name: currentMap.name,\n              view:\n                currentMapMeta.mapType === MAP_TYPES.COUNTRY\n                  ? MAP_VIEWS.STATES\n                  : MAP_VIEWS.DISTRICTS,\n              stat: MAP_STATISTICS.TOTAL,\n            });\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n              setRegionHighlighted({\n                state: regionHighlighted.state,\n              });\n          }}\n        >\n          <h4>{t('Total Cases')}</h4>\n        </div>\n        {isCountryLoaded && (\n          <div\n            className={`tab ${\n              currentMap.stat === MAP_STATISTICS.PER_MILLION ? 'focused' : ''\n            }`}\n            onClick={() => {\n              if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\n              setCurrentMap({\n                name: currentMap.name,\n                view: MAP_VIEWS.STATES,\n                stat: MAP_STATISTICS.PER_MILLION,\n              });\n              setRegionHighlighted({\n                state: regionHighlighted.state,\n              });\n            }}\n          >\n            <h4>\n              {t('Cases per million')}\n              <sup>&dagger;</sup>\n            </h4>\n          </div>\n        )}\n        <div\n          className={`tab ${\n            currentMap.stat === MAP_STATISTICS.ZONE ? 'focused' : ''\n          }`}\n          onClick={() => {\n            setCurrentMap({\n              name: currentMap.name,\n              view: MAP_VIEWS.DISTRICTS,\n              stat: MAP_STATISTICS.ZONE,\n            });\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n              setRegionHighlighted({\n                state: 'Total',\n              });\n          }}\n        >\n          <h4>Zones</h4>\n        </div>\n      </div>\n\n      <h6 className=\"footnote table-fineprint\">\n        &dagger; {t('Based on 2019 population projection by NCP') + '('}\n        <a\n          href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\n          target=\"_noblank\"\n          style={{color: '#6c757d'}}\n        >\n          {t('report')}\n        </a>\n        )\n      </h6>\n    </div>\n  );\n}\n\nexport default React.memo(MapExplorer, isEqual);\n","import {testedToolTip} from './tooltips';\n\nimport {sliceTimeseriesFromEnd, formatNumber} from '../utils/commonfunctions';\nimport {useResizeObserver} from '../utils/hooks';\n\nimport * as d3 from 'd3';\nimport {addDays, subDays, format} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nconst isEqual = (prevProps, currProps) => {\n  if (!currProps.isIntersecting) return true;\n  if (!prevProps.isIntersecting) return false;\n  if (!equal(currProps.chartType, prevProps.chartType)) {\n    return false;\n  }\n  if (!equal(currProps.mode, prevProps.mode)) {\n    return false;\n  }\n  if (!equal(currProps.logMode, prevProps.logMode)) {\n    return false;\n  }\n  if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  }\n  return true;\n};\n\nfunction TimeSeries({timeseriesProp, chartType, mode, logMode, stateCode}) {\n  const {t} = useTranslation();\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState({});\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n  const svgRef5 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const transformTimeSeries = useCallback(\n    (timeseries) => {\n      if (timeseries.length > 1) {\n        const slicedTimeseries = sliceTimeseriesFromEnd(\n          timeseries,\n          lastDaysCount\n        );\n        setIndex(slicedTimeseries.length - 1);\n        setTimeseries(slicedTimeseries);\n      }\n    },\n    [lastDaysCount]\n  );\n\n  useEffect(() => {\n    transformTimeSeries(timeseriesProp);\n  }, [lastDaysCount, timeseriesProp, transformTimeSeries]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = timeseries.length;\n      const yBufferTop = 1.2;\n      const yBufferBottom = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n      const svg4 = d3.select(svgRef4.current);\n      const svg5 = d3.select(svgRef5.current);\n\n      const dateMin = subDays(timeseries[0].date, 1);\n      const dateMax = addDays(timeseries[T - 1].date, 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g.attr('class', 'x-axis').call(d3.axisBottom(xScale).ticks(numTicksX));\n\n      const xAxis2 = (g, yScale) => {\n        g.attr('class', 'x-axis2')\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\n          .select('.domain')\n          .style('transform', `translateY(${yScale(0)}px)`);\n\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n        else g.select('.domain').attr('opacity', 0);\n      };\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5));\n\n      // Arrays of objects\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalactive',\n        'totalrecovered',\n        'totaldeceased',\n        'totaltested',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyactive',\n        'dailyrecovered',\n        'dailydeceased',\n        'dailytested',\n      ];\n\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d', '#201aa2'];\n\n      const svgArray = [svg1, svg2, svg3, svg4, svg5];\n\n      let yScales;\n      if (plotTotal) {\n        const uniformScaleMin = d3.min(timeseries, (d) =>\n          Math.min(d.totalactive, d.totalrecovered, d.totaldeceased)\n        );\n        const uniformScaleMax = d3.max(timeseries, (d) => d.totalconfirmed);\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(10, yBufferTop * uniformScaleMax),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(timeseries, (d) => d[type]),\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(10, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (mode && type !== 'totaltested')\n            return logMode ? yScaleUniformLog : yScaleUniformLinear;\n          else return logMode ? yScaleLog : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            yBufferBottom *\n              Math.min(\n                0,\n                d3.min(timeseries, (d) => d.dailyactive)\n              ),\n            Math.max(\n              1,\n              yBufferTop *\n                d3.max(timeseries, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          if (mode && type !== 'dailytested') return yScaleDailyUniform;\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              yBufferBottom *\n                Math.min(\n                  0,\n                  d3.min(timeseries, (d) => d[type])\n                ),\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([timeseries[T - 1]], (d) => d.date)\n          .join((enter) =>\n            enter.append('circle').attr('cx', (d) => xScale(d.date))\n          )\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(timeseries, date, 1);\n        if (0 <= i && i < T) {\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = timeseries[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            if (!isNaN(d[type]))\n              f.attr('cx', xScale(d.date))\n                .attr('cy', yScale(d[type]))\n                .attr('opacity', 1);\n            else f.attr('opacity', 0);\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          if (!isNaN(timeseries[T - 1][type]))\n            f.attr('cx', xScale(timeseries[T - 1].date))\n              .attr('cy', yScale(timeseries[T - 1][type]))\n              .attr('opacity', 1);\n          else f.attr('opacity', 0);\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const filteredTimeseries = timeseries.filter((d) => !isNaN(d[type]));\n        const color = colors[i];\n        const yScale = yScales[i];\n\n        /* X axis */\n        svg\n          .select('.x-axis')\n          .style('transform', `translateY(${chartBottom}px)`)\n          .transition(t)\n          .call(xAxis);\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n        /* Y axis */\n        svg\n          .select('.y-axis')\n          .style('transform', `translateX(${chartRight}px)`)\n          .transition(t)\n          .call(yAxis, yScale);\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(filteredTimeseries, (d) => d.date)\n          .join((enter) =>\n            enter\n              .append('circle')\n              .attr('cy', chartBottom)\n              .attr('cx', (d) => xScale(d.date))\n          )\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (!isNaN(timeseries[T - 1][type]))\n          focus[i]\n            .transition(t)\n            .attr('cx', (d) => xScale(d.date))\n            .attr('cy', (d) => yScale(d[type]))\n            .attr('opacity', 1);\n        else focus[i].transition(t).attr('opacity', 0);\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...filteredTimeseries].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(filteredTimeseries, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('y1', chartBottom)\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .transition(t)\n            .attr('x1', (d) => xScale(d.date))\n            .attr('y1', yScale(0))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [chartType, dimensions, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const dateStr = datapoint.date ? format(datapoint.date, 'dd MMMM') : '';\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n  const chartKey5 = chartType === 1 ? 'totaltested' : 'dailytested';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Confirmed')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-blue\">\n          <div className=\"stats is-blue\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Active')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Recovered')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Deceased')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\n              <h6>{currentStatusCount(chartKey4)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-purple\">\n          <div className=\"stats is-purple\">\n            <h5 className={`${!moving ? 'title' : ''}`}>\n              {t('Tested')} {stateCode === 'TT' ? testedToolTip : ''}\n            </h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey5])}</h2>\n              <h6>{currentStatusCount(chartKey5)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef5} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          {t('Beginning')}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label=\"1 month\"\n        >\n          {`1 ${t('Month')}`}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label=\"14 days\"\n        >\n          {`2 ${t('Weeks')}`}\n        </button>\n      </div>\n\n      <div className=\"alert\">\n        <Icon.AlertOctagon />\n        <div className=\"alert-right\">\n          {t('Tested chart is independent of uniform scaling')}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(TimeSeries, isEqual);\n","import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import TimeSeries from './timeseries';\n\nimport 'intersection-observer';\nimport Observer from '@researchgate/react-intersection-observer';\nimport equal from 'fast-deep-equal';\nimport React, {useState} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage} from 'react-use';\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.activeStateCode, prevProps.activeStateCode)) {\n    return false;\n  }\n  if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  }\n  return true;\n};\n\nfunction TimeSeriesExplorer({\n  timeseries,\n  activeStateCode,\n  onHighlightState,\n  states,\n  anchor,\n  setAnchor,\n  isIntersecting,\n}) {\n  const [chartType, setChartType] = useLocalStorage('timeseriesChartType', 1);\n  const [isTimeseriesIntersecting, setIsTimeseriesIntersecting] = useState(\n    false\n  );\n\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage(\n    'timeseriesMode',\n    true\n  );\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage(\n    'timeseriesLogMode',\n    false\n  );\n  const {t} = useTranslation();\n\n  const options = {\n    rootMargin: '0px 0px 0px 0px',\n  };\n\n  return (\n    <Observer\n      options={options}\n      onChange={({isIntersecting}) =>\n        setIsTimeseriesIntersecting(isIntersecting)\n      }\n    >\n      <div\n        className={`TimeSeriesExplorer ${\n          anchor === 'timeseries' ? 'stickied' : ''\n        }`}\n        style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      >\n        <div\n          className=\"timeseries-header fadeInUp\"\n          style={{animationDelay: '2.5s'}}\n        >\n          {window.innerWidth > 769 && anchor !== undefined && (\n            <div\n              className={`anchor ${anchor === 'timeseries' ? 'stickied' : ''}`}\n              onClick={() => {\n                setAnchor(anchor === 'timeseries' ? null : 'timeseries');\n              }}\n            >\n              <Icon.Anchor />\n            </div>\n          )}\n\n          <h1>{t('Spread Trends')}</h1>\n          <div className=\"tabs\">\n            <div\n              className={`tab ${chartType === 1 ? 'focused' : ''}`}\n              onClick={() => {\n                setChartType(1);\n              }}\n            >\n              <h4>{t('Cumulative')}</h4>\n            </div>\n            <div\n              className={`tab ${chartType === 2 ? 'focused' : ''}`}\n              onClick={() => {\n                setChartType(2);\n              }}\n            >\n              <h4>{t('Daily')}</h4>\n            </div>\n          </div>\n\n          <div className=\"scale-modes\">\n            <label className=\"main\">{t('Scale Modes')}</label>\n            <div className=\"timeseries-mode\">\n              <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n              <input\n                id=\"timeseries-mode\"\n                type=\"checkbox\"\n                checked={timeseriesMode}\n                className=\"switch\"\n                aria-label={t('Checked by default to scale uniformly.')}\n                onChange={(event) => {\n                  setTimeseriesMode(!timeseriesMode);\n                }}\n              />\n            </div>\n            <div\n              className={`timeseries-logmode ${\n                chartType !== 1 ? 'disabled' : ''\n              }`}\n            >\n              <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n              <input\n                id=\"timeseries-logmode\"\n                type=\"checkbox\"\n                checked={chartType === 1 && timeseriesLogMode}\n                className=\"switch\"\n                disabled={chartType !== 1}\n                onChange={(event) => {\n                  setTimeseriesLogMode(!timeseriesLogMode);\n                }}\n              />\n            </div>\n          </div>\n\n          {states && (\n            <div className=\"trends-state-name\">\n              <select\n                value={activeStateCode}\n                onChange={({target}) => {\n                  const selectedState = target.selectedOptions[0].getAttribute(\n                    'statedata'\n                  );\n                  onHighlightState(JSON.parse(selectedState));\n                }}\n              >\n                {states.map((s) => {\n                  return (\n                    <option\n                      value={s.statecode}\n                      key={s.statecode}\n                      statedata={JSON.stringify(s)}\n                    >\n                      {s.statecode === 'TT' ? t('All States') : t(s.state)}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          )}\n        </div>\n\n        {timeseries && (\n          <TimeSeries\n            timeseriesProp={timeseries}\n            chartType={chartType}\n            mode={timeseriesMode}\n            logMode={timeseriesLogMode}\n            stateCode={activeStateCode}\n            isIntersecting={isTimeseriesIntersecting}\n          />\n        )}\n      </div>\n    </Observer>\n  );\n}\n\nexport default React.memo(TimeSeriesExplorer, isEqual);\n","import {\n  STATE_CODES_ARRAY,\n  STATE_CODES_REVERSE,\n  STATE_CODES,\n} from '../constants';\n\nimport classnames from 'classnames';\nimport Bloodhound from 'corejs-typeahead';\nimport React, {useState, useCallback, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useDebounce} from 'react-use';\n\nconst engine = new Bloodhound({\n  initialize: true,\n  local: STATE_CODES_ARRAY,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\n});\n\nconst districtEngine = new Bloodhound({\n  initialize: true,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('district'),\n  indexRemote: true,\n  remote: {\n    url: 'https://api.covid19india.org/state_district_wise.json',\n    transform: function (response) {\n      const districts = [];\n      Object.keys(response).map((stateName) => {\n        const districtData = response[stateName].districtData;\n        Object.keys(districtData).map((districtName) => {\n          return districts.push({district: districtName, state: stateName});\n        });\n        return null;\n      });\n      return districts;\n    },\n  },\n});\n\nconst essentialsEngine = new Bloodhound({\n  initialize: true,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\n    'category',\n    'city',\n    'contact',\n    'descriptionandorserviceprovided',\n    'nameoftheorganisation',\n    'state'\n  ),\n  indexRemote: true,\n  remote: {\n    url: 'https://api.covid19india.org/resources/resources.json',\n    transform: function (response) {\n      return response.resources;\n    },\n  },\n});\n\nlet focused = false;\nconst suggestions = [\n  'Karnataka',\n  'West Bengal',\n  'Pune Testing',\n  'Mumbai Shelter',\n  'Medical',\n  'Delhi Police',\n];\n\nfunction Search({districtZones}) {\n  const [searchValue, setSearchValue] = useState('');\n  const [expand, setExpand] = useState(false);\n  const [results, setResults] = useState([]);\n  const searchInput = useRef(null);\n  const {t} = useTranslation();\n\n  const handleSearch = useCallback((searchInput) => {\n    const results = [];\n\n    const sync = (datums) => {\n      datums.map((result, index) => {\n        const stateObj = {\n          name: result.name,\n          type: 'state',\n          route: result.code,\n        };\n        results.push(stateObj);\n        return null;\n      });\n    };\n\n    const districtSync = (datums) => {\n      datums.slice(0, 3).map((result, index) => {\n        const districtObj = {\n          name: result.district,\n          type: 'district',\n          route: STATE_CODES_REVERSE[result.state],\n        };\n        results.push(districtObj);\n        return null;\n      });\n    };\n\n    const essentialsSync = (datums) => {\n      datums.slice(0, 5).map((result, index) => {\n        const essentialsObj = {\n          name: result.nameoftheorganisation,\n          type: 'essentials',\n          category: result.category,\n          website: result.contact,\n          description: result.descriptionandorserviceprovided,\n          city: result.city,\n          state: result.state,\n          contact: result.phonenumber,\n        };\n        results.push(essentialsObj);\n        return null;\n      });\n      setResults([...results]);\n    };\n\n    engine.search(searchInput, sync);\n    districtEngine.search(searchInput, districtSync);\n    essentialsEngine.search(searchInput, essentialsSync);\n  }, []);\n\n  useDebounce(\n    () => {\n      if (searchValue) {\n        handleSearch(searchValue);\n      } else {\n        setResults([]);\n      }\n    },\n    100,\n    [searchValue]\n  );\n\n  function setNativeValue(element, value) {\n    const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n    const prototype = Object.getPrototypeOf(element);\n    const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n      prototype,\n      'value'\n    ).set;\n\n    if (valueSetter && valueSetter !== prototypeValueSetter) {\n      prototypeValueSetter.call(element, value);\n    } else {\n      valueSetter.call(element, value);\n    }\n  }\n\n  function fillPlaceholder(target, index, cursorPosition, callback) {\n    if (focused) {\n      target.textContent = '';\n      return true;\n    }\n    const text = suggestions[index];\n    const placeholder = target.textContent;\n    target.classList.remove('disappear');\n    target.textContent = placeholder + text[cursorPosition];\n    if (cursorPosition < text.length - 1) {\n      setTimeout(function () {\n        fillPlaceholder(target, index, cursorPosition + 1, callback);\n      }, 200);\n      return true;\n    }\n    callback();\n  }\n\n  function clearPlaceholder(target, callback) {\n    const placeholder = target.textContent;\n    target.classList.add('disappear');\n    if (placeholder.length > 0) {\n      setTimeout(function () {\n        target.textContent = '';\n        clearPlaceholder(target, callback);\n      }, 1000);\n      return true;\n    }\n    callback();\n  }\n\n  function loopThroughSuggestions(target, index) {\n    if (focused) {\n      target.textContent = '';\n      return true;\n    }\n    fillPlaceholder(target, index, 0, function () {\n      setTimeout(function () {\n        clearPlaceholder(target, function () {\n          loopThroughSuggestions(target, (index + 1) % suggestions.length);\n        });\n      }, 2000);\n    });\n  }\n\n  const targetInput = document.getElementById('search-placeholder');\n  if (targetInput) loopThroughSuggestions(targetInput, 0);\n\n  return (\n    <div className=\"Search\">\n      <label>{t('Search your city, resources, etc')}</label>\n      <div className=\"line\"></div>\n\n      <input\n        type=\"text\"\n        value={searchValue}\n        ref={searchInput}\n        onFocus={(event) => {\n          focused = true;\n          setExpand(true);\n        }}\n        onBlur={() => {\n          setExpand(false);\n        }}\n        onChange={(event) => {\n          setSearchValue(event.target.value);\n        }}\n      />\n      <span id=\"search-placeholder\" className=\"search-placeholder\"></span>\n\n      <div className={`search-button`}>\n        <Icon.Search />\n      </div>\n\n      {searchValue.length > 0 && (\n        <div\n          className={`close-button`}\n          onClick={() => {\n            setSearchValue('');\n            setResults([]);\n          }}\n        >\n          <Icon.X />\n        </div>\n      )}\n\n      {results.length > 0 && (\n        <div className=\"results\">\n          {results.map((result, index) => {\n            if (result.type === 'state' || result.type === 'district') {\n              return (\n                <Link key={index} to={`state/${result.route}`}>\n                  <div className=\"result\">\n                    <div className=\"result-left\">\n                      <div className=\"result-name\">\n                        {`${result.name}`}\n                        {result.type === 'district' &&\n                          `, ${STATE_CODES[result.route]}`}\n                      </div>\n                      <div\n                        className={classnames('result-zone', {\n                          [`is-${districtZones[STATE_CODES[result.route]][\n                            result.name\n                          ]?.zone.toLowerCase()}`]: true,\n                        })}\n                      ></div>\n                    </div>\n                    <div className=\"result-type\">\n                      <span>{[result.route]}</span>\n                      <Icon.ArrowRightCircle size={14} />\n                    </div>\n                  </div>\n                </Link>\n              );\n            } else {\n              return (\n                <a\n                  key={index}\n                  href={result.website}\n                  target=\"_noblank\"\n                  className=\"essential-result\"\n                >\n                  <div className=\"result-top\">\n                    <div className=\"result-top-left\">\n                      <div className=\"result-name\">{result.name}</div>\n                      <div className=\"result-location\">\n                        {result.city}, {result.state}\n                      </div>\n                    </div>\n                    <div className=\"result-category\">\n                      <div>\n                        {result.category.match('Delivery')\n                          ? 'Home Delivery'\n                          : result.category}\n                      </div>\n                      <Icon.ExternalLink />\n                    </div>\n                  </div>\n                  <div className=\"result-description\">{result.description}</div>\n                  <div className=\"result-contact\">\n                    <Icon.Phone />\n                    <div>{result.contact}</div>\n                  </div>\n                </a>\n              );\n            }\n          })}\n        </div>\n      )}\n\n      {expand && (\n        <div className=\"expanded\">\n          <div className=\"expanded-left\">\n            <h3>{t('Essentials')}</h3>\n            <div className=\"suggestions\">\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Testing Pune');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Testing Pune')}\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Delhi Shelter');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Delhi Shelter')}\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(\n                      searchInput.current,\n                      'Community Kitchen in Kerala'\n                    );\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Community Kitchen in Kerala')}\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Groceries Chennai');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Groceries Chennai')}\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(\n                      searchInput.current,\n                      'Senior citizen support bangalore'\n                    );\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Senior citizen support bangalore')}\n                </h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"expanded-right\">\n            <h3>{t('Locations')}</h3>\n            <div className=\"suggestions\">\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Hyderabad');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Hyderabad')}\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Karnataka');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Karnataka')}\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Chennai');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Chennai')}\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Jharkhand');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Jharkhand')}\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Alappuzha');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  {t('Alappuzha')}\n                </h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(Search);\n","import {STATE_ROW_STATISTICS, DISTRICT_ROW_STATISTICS} from '../constants';\nimport {\n  formatDate,\n  formatNumber,\n  capitalize,\n  abbreviate,\n} from '../utils/commonfunctions';\n\nimport classnames from 'classnames';\nimport {formatDistance} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useCallback, useMemo} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport {createBreakpoint, useLocalStorage, useEffectOnce} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\n\nfunction StateCell({state, statistic}) {\n  const ArrowUp = useMemo(() => <Icon.ArrowUp />, []);\n\n  return (\n    <td>\n      <span className={classnames('delta', `is-${statistic}`)}>\n        {state[`delta${statistic}`] > 0 && ArrowUp}\n        {state[`delta${statistic}`] > 0 && state[`delta${statistic}`]}\n      </span>\n      <span className=\"total\">\n        {state[statistic] === 0 ? '-' : formatNumber(state[statistic])}\n      </span>\n    </td>\n  );\n}\n\nfunction DistrictHeaderCell({handleSort, statistic, sortData}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <td onClick={() => handleSort(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={statistic}\n        >\n          {breakpoint === 'L'\n            ? statistic.slice(0)\n            : breakpoint === 'S'\n            ? capitalize(\n                abbreviate(statistic === 'deaths' ? 'deceased' : statistic)\n              )\n            : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))}\n        </abbr>\n        <div\n          style={{\n            display: sortData.sortColumn === statistic ? 'initial' : 'none',\n          }}\n        >\n          {sortData.isAscending ? (\n            <div className=\"arrow-up\" />\n          ) : (\n            <div className=\"arrow-down\" />\n          )}\n        </div>\n      </div>\n    </td>\n  );\n}\n\nfunction PureDistrictCell({district, statistic}) {\n  return (\n    <td>\n      <span className={classnames('delta', `is-${statistic}`)}>\n        {district.delta[statistic] > 0 && <Icon.ArrowUp />}\n        {district.delta[statistic] > 0 && district.delta[statistic]}\n      </span>\n      <span className=\"total\">{formatNumber(district[statistic])}</span>\n    </td>\n  );\n}\n\nconst DistrictCell = React.memo(PureDistrictCell);\n\nconst isDistrictRowEqual = (prevProps, currProps) => {\n  if (equal(prevProps.regionHighlighted?.district, prevProps.district)) {\n    return false;\n  }\n  if (equal(currProps.regionHighlighted?.district, currProps.district)) {\n    return false;\n  }\n  return true;\n};\n\nfunction PureDistrictRow({\n  regionHighlighted,\n  district,\n  state,\n  zone,\n  onHighlightDistrict,\n  sortedDistricts,\n  districts,\n}) {\n  const {t} = useTranslation();\n\n  return (\n    <tr\n      key={district.district}\n      className={classnames('district', {\n        'is-highlighted': regionHighlighted?.district === district,\n      })}\n      onMouseEnter={() => onHighlightDistrict(district, state)}\n    >\n      <td className={classnames(`is-${zone?.zone}`)}>\n        <div className=\"title-chevron\">\n          <span className=\"title-icon\">\n            {t(district)}\n            <span\n              data-for=\"district\"\n              data-tip={[[sortedDistricts[district].notes]]}\n              data-event=\"touchstart mouseover\"\n              data-event-off=\"mouseleave\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              {sortedDistricts[district].notes && <Icon.Info />}\n            </span>\n          </span>\n        </div>\n      </td>\n\n      {DISTRICT_ROW_STATISTICS.map((statistic) => (\n        <DistrictCell\n          key={statistic}\n          district={districts[district]}\n          statistic={statistic}\n        />\n      ))}\n    </tr>\n  );\n}\n\nconst DistrictRow = React.memo(PureDistrictRow, isDistrictRowEqual);\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.state.state, currProps.state.state)) {\n    return false;\n  }\n  if (\n    !equal(\n      prevProps.regionHighlighted?.state,\n      currProps.regionHighlighted?.state\n    )\n  ) {\n    return false;\n  }\n  if (\n    !equal(\n      prevProps.regionHighlighted?.district,\n      currProps.regionHighlighted?.district\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\nfunction Row({\n  index,\n  state,\n  districts,\n  zones,\n  regionHighlighted,\n  onHighlightState,\n  onHighlightDistrict,\n}) {\n  const [sortedDistricts, setSortedDistricts] = useState(districts);\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useLocalStorage('districtSortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n  });\n\n  const history = useHistory();\n  const {t} = useTranslation();\n\n  const Chevron = useMemo(\n    () => (\n      <span\n        className={classnames(\n          'dropdown',\n          {rotateRightDown: showDistricts},\n          {rotateDownRight: !showDistricts}\n        )}\n      >\n        <Icon.ChevronDown />\n      </span>\n    ),\n    [showDistricts]\n  );\n\n  const _onHighlightState = useCallback(\n    (state) => {\n      if (!equal(state.state, regionHighlighted?.state)) {\n        onHighlightState(state);\n      }\n    },\n    [onHighlightState, regionHighlighted]\n  );\n\n  const doSort = useCallback(\n    (sortData) => {\n      const sorted = {};\n      Object.keys(sortedDistricts)\n        .sort((district1, district2) => {\n          if (sortData.sortColumn !== 'district') {\n            return sortData.isAscending\n              ? parseInt(sortedDistricts[district1][sortData.sortColumn]) -\n                  parseInt(sortedDistricts[district2][sortData.sortColumn])\n              : parseInt(sortedDistricts[district2][sortData.sortColumn]) -\n                  parseInt(sortedDistricts[district1][sortData.sortColumn]);\n          } else {\n            return sortData.isAscending\n              ? district1.localeCompare(district2)\n              : district2.localeCompare(district1);\n          }\n        })\n        .forEach((key) => {\n          sorted[key] = sortedDistricts[key];\n        });\n      setSortedDistricts(sorted);\n    },\n    [sortedDistricts]\n  );\n\n  const handleSort = useCallback(\n    (statistic) => {\n      const newSortData = {\n        isAscending: !sortData.isAscending,\n        sortColumn: statistic,\n      };\n      doSort(newSortData);\n      setSortData(Object.assign({}, sortData, newSortData));\n    },\n    [doSort, setSortData, sortData]\n  );\n\n  useEffectOnce(() => {\n    if (state.statecode !== 'TT') doSort(sortData);\n  });\n\n  return (\n    <React.Fragment>\n      <tr\n        className={classnames(\n          'state',\n          {'is-total': state.statecode === 'TT'},\n          {'is-highlighted': regionHighlighted?.state === state.state},\n          {'is-odd': index % 2 === 0}\n        )}\n        onMouseEnter={() => _onHighlightState(state)}\n        onClick={\n          state.statecode !== 'TT'\n            ? () => {\n                setShowDistricts(!showDistricts);\n              }\n            : null\n        }\n      >\n        <td>\n          <div className=\"title-chevron\">\n            {state.statecode !== 'TT' && Chevron}\n            <span className=\"title-icon\">\n              {t(state.state)}\n\n              <span\n                data-tip={[t(`${state.statenotes}`)]}\n                data-event=\"touchstart mouseover\"\n                data-event-off=\"mouseleave\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                {state.statenotes && <Icon.Info />}\n              </span>\n            </span>\n          </div>\n        </td>\n\n        {STATE_ROW_STATISTICS.map((statistic, index) => (\n          <StateCell key={index} state={state} statistic={statistic} />\n        ))}\n      </tr>\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr className=\"is-spacer\">\n            <td colSpan={5}>\n              <p />\n            </td>\n          </tr>\n\n          <tr className={'state-last-update'}>\n            <td colSpan={3} style={{paddingBottom: 0}}>\n              <p className=\"spacer\"></p>\n              <p>\n                {isNaN(Date.parse(formatDate(state.lastupdatedtime)))\n                  ? ''\n                  : `${t('Last updated')} ${formatDistance(\n                      new Date(formatDate(state.lastupdatedtime)),\n                      new Date()\n                    )} ${t('ago')}`}\n              </p>\n              {sortedDistricts?.Unknown && (\n                <div className=\"disclaimer\">\n                  <Icon.AlertCircle />\n                  {t('District-wise numbers are under reconciliation')}\n                </div>\n              )}\n            </td>\n            <td\n              align=\"center\"\n              className=\"state-page-link\"\n              colSpan={2}\n              onClick={() => {\n                history.push(`state/${state.statecode}`);\n              }}\n            >{`View ${t(state.state)}'s Page`}</td>\n          </tr>\n\n          <tr className={classnames('district-heading')}>\n            <td onClick={() => handleSort('district')}>\n              <div className=\"heading-content\">\n                <abbr title=\"District\">{t('District')}</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'district' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </td>\n\n            {DISTRICT_ROW_STATISTICS.map((statistic, index) => (\n              <DistrictHeaderCell\n                key={index}\n                handleSort={handleSort}\n                statistic={statistic}\n                sortData={sortData}\n              />\n            ))}\n          </tr>\n        </React.Fragment>\n      )}\n\n      {showDistricts &&\n        Object.keys(sortedDistricts).map((district, index) => (\n          <DistrictRow\n            key={district}\n            state={state}\n            district={district}\n            districts={districts}\n            zone={zones[district]}\n            sortedDistricts={sortedDistricts}\n            regionHighlighted={regionHighlighted}\n            onHighlightDistrict={onHighlightDistrict}\n          />\n        ))}\n\n      {showDistricts && (\n        <tr className=\"is-spacer\">\n          <td colSpan={5}>\n            <p />\n            <ReactTooltip\n              id=\"district\"\n              place=\"right\"\n              type=\"dark\"\n              effect=\"solid\"\n              multiline={true}\n              scrollHide={true}\n              globalEventOff=\"click\"\n            />\n          </td>\n        </tr>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Row, isEqual);\n","import Row from './row';\n\nimport {STATE_ROW_STATISTICS} from '../constants';\nimport {capitalize, abbreviate} from '../utils/commonfunctions';\n\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useMemo, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport {createBreakpoint, useLocalStorage, useEffectOnce} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\n\nfunction StateHeaderCell({handleSort, sortData, statistic}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <th onClick={() => handleSort(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={statistic}\n        >\n          {breakpoint === 'L'\n            ? statistic.slice(0)\n            : breakpoint === 'S'\n            ? capitalize(\n                abbreviate(statistic === 'deaths' ? 'deceased' : statistic)\n              )\n            : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))}\n        </abbr>\n        <div\n          style={{\n            display: sortData.sortColumn === statistic ? 'initial' : 'none',\n          }}\n        >\n          <div\n            className={classnames(\n              {'arrow-up': sortData.isAscending},\n              {'arrow-down': !sortData.isAscending}\n            )}\n          />\n        </div>\n      </div>\n    </th>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  return equal(prevProps.regionHighlighted, currProps.regionHighlighted);\n};\n\nfunction Table({\n  states,\n  districts,\n  zones,\n  regionHighlighted,\n  onHighlightState,\n  onHighlightDistrict,\n}) {\n  const [sortData, setSortData] = useLocalStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n  });\n  const {t} = useTranslation();\n\n  const [sortedStates, setSortedStates] = useState(\n    states.filter((state) => state.statecode !== 'TT')\n  );\n\n  const FineprintTop = useMemo(\n    () => (\n      <React.Fragment>\n        <h5\n          className=\"table-fineprint fadeInUp\"\n          style={{animationDelay: '1.5s'}}\n        >\n          {t('Compiled from State Govt. numbers')},{' '}\n          <Link to=\"/about\" style={{color: '#6c757d'}}>\n            {t('know more')}!\n          </Link>\n        </h5>\n        <h5\n          className=\"table-fineprint fadeInUp\"\n          style={{animationDelay: '1.5s'}}\n        >\n          District zones as published by MoHFW,{' '}\n          <a\n            href=\"https://www.facebook.com/airnewsalerts/photos/a.262571017217636/1710062729135117/?type=3&theater\"\n            style={{color: '#6c757d'}}\n          >\n            source\n          </a>\n        </h5>\n      </React.Fragment>\n    ),\n    [t]\n  );\n\n  const FineprintBottom = useMemo(\n    () => (\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n        {states.slice(1).filter((s) => s && s.confirmed > 0).length} States/UTS\n        Affected\n      </h5>\n    ),\n    [states]\n  );\n\n  const doSort = useCallback(\n    (sortData) => {\n      const newSortedStates = [...sortedStates].sort((x, y) => {\n        if (sortData.sortColumn !== 'state') {\n          return sortData.isAscending\n            ? parseInt(x[sortData.sortColumn]) -\n                parseInt(y[sortData.sortColumn])\n            : parseInt(y[sortData.sortColumn]) -\n                parseInt(x[sortData.sortColumn]);\n        } else {\n          return sortData.isAscending\n            ? x[sortData.sortColumn].localeCompare(y[sortData.sortColumn])\n            : y[sortData.sortColumn].localeCompare(x[sortData.sortColumn]);\n        }\n      });\n      setSortedStates(newSortedStates);\n    },\n    [sortedStates]\n  );\n\n  const handleSort = useCallback(\n    (statistic) => {\n      const newSortData = {\n        isAscending: !sortData.isAscending,\n        sortColumn: statistic,\n      };\n      doSort(newSortData);\n      setSortData(Object.assign({}, sortData, newSortData));\n    },\n    [doSort, setSortData, sortData]\n  );\n\n  useEffectOnce(() => {\n    doSort(sortData);\n  });\n\n  if (states.length > 0) {\n    return (\n      <React.Fragment>\n        <ReactTooltip\n          place=\"right\"\n          type=\"dark\"\n          effect=\"solid\"\n          multiline={true}\n          globalEventOff=\"click\"\n        />\n\n        {FineprintTop}\n\n        <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n          <thead>\n            <tr>\n              <th className=\"state-heading\" onClick={() => handleSort('state')}>\n                <div className=\"heading-content\">\n                  <abbr title=\"State\">{t('State/UT')}</abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'state' ? 'initial' : 'none',\n                    }}\n                  >\n                    <div\n                      className={classnames(\n                        {'arrow-up': sortData.isAscending},\n                        {'arrow-down': !sortData.isAscending}\n                      )}\n                    />\n                  </div>\n                </div>\n              </th>\n              {STATE_ROW_STATISTICS.map((statistic, index) => (\n                <StateHeaderCell\n                  key={index}\n                  handleSort={handleSort}\n                  sortData={sortData}\n                  statistic={statistic}\n                />\n              ))}\n            </tr>\n          </thead>\n\n          {states && (\n            <tbody>\n              {sortedStates.map((state, index) => {\n                if (state.confirmed > 0 && state.statecode !== 'TT') {\n                  return (\n                    <Row\n                      key={state.statecode}\n                      state={state}\n                      districts={districts[state.state]?.districtData}\n                      zones={zones[state.state]}\n                      regionHighlighted={\n                        equal(regionHighlighted?.state, state.state)\n                          ? regionHighlighted\n                          : null\n                      }\n                      onHighlightState={onHighlightState}\n                      onHighlightDistrict={onHighlightDistrict}\n                    />\n                  );\n                }\n                return null;\n              })}\n            </tbody>\n          )}\n\n          {states && (\n            <tbody>\n              <Row\n                key={0}\n                state={states[0]}\n                onHighlightState={onHighlightState}\n              />\n            </tbody>\n          )}\n        </table>\n        {states && FineprintBottom}\n      </React.Fragment>\n    );\n  } else {\n    return <div style={{height: '50rem'}}></div>;\n  }\n}\n\nexport default React.memo(Table, isEqual);\n","import axios from 'axios';\nimport {formatDistance, format} from 'date-fns';\nimport React, {useState, useLayoutEffect} from 'react';\nimport {useEffectOnce} from 'react-use';\n\nconst newDate = new Date();\nlet currentDate = newDate;\n\nfunction Updates(props) {\n  const [updates, setUpdates] = useState([]);\n\n  useEffectOnce(() => {\n    axios\n      .get('https://api.covid19india.org/updatelog/log.json')\n      .then((response) => {\n        setUpdates(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  // reset the currentDate after rendering is complete\n  // in case the currentDate was changed during addHeader\n  useLayoutEffect(() => {\n    currentDate = newDate;\n  });\n\n  return (\n    <div className=\"updates\">\n      <div className=\"updates-header\">\n        <h2>{format(currentDate, 'd MMM')}</h2>\n      </div>\n\n      {updates\n        .slice(-5)\n        .reverse()\n        .map(function (activity, index) {\n          activity.update = activity.update.replace('\\n', '<br/>');\n          const activityDate = new Date(activity.timestamp * 1000);\n          const addHeader = () => {\n            currentDate = activityDate;\n\n            return (\n              <React.Fragment>\n                {index === 0 ? (\n                  <div className=\"update\">\n                    <h4>No updates yet!</h4>\n                  </div>\n                ) : (\n                  ''\n                )}\n                <div className=\"updates-header\">\n                  <h2>{format(activityDate, 'd MMM')}</h2>\n                </div>\n              </React.Fragment>\n            );\n          };\n\n          return (\n            <React.Fragment key={index}>\n              {activityDate.getDate() !== currentDate.getDate()\n                ? addHeader()\n                : ' '}\n              <div key={index} className=\"update\">\n                <h5>\n                  {formatDistance(\n                    new Date(activity.timestamp * 1000),\n                    new Date()\n                  ) + ' ago'}\n                </h5>\n                <h4\n                  dangerouslySetInnerHTML={{\n                    __html: activity.update,\n                  }}\n                ></h4>\n              </div>\n            </React.Fragment>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default Updates;\n","import Footer from './footer';\n// import LanguageSwitcher from './languageswitcher';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport Search from './search';\nimport Table from './table';\nimport TimeSeriesExplorer from './timeseriesexplorer';\nimport Updates from './updates';\n\nimport {STATE_CODES_REVERSE} from '../constants';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  mergeTimeseries,\n  preprocessTimeseries,\n  parseStateTimeseries,\n  parseStateTestTimeseries,\n  parseTotalTestTimeseries,\n  parseDistrictZones,\n} from '../utils/commonfunctions';\n\nimport axios from 'axios';\nimport React, {useState, useCallback, useMemo} from 'react';\nimport * as Icon from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useEffectOnce, useLocalStorage} from 'react-use';\nfunction Home(props) {\n  const [states, setStates] = useState(null);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState(null);\n  const [districtZones, setDistrictZones] = useState(null);\n  const [stateTestData, setStateTestData] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState(null);\n  const [fetched, setFetched] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    state: 'Total',\n  });\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [anchor, setAnchor] = useState(null);\n  const [mapOption, setMapOption] = useState('confirmed');\n\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\n    'lastViewedLog',\n    null\n  );\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n\n  const Bell = useMemo(\n    () => (\n      <Icon.Bell\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n          setNewUpdate(false);\n        }}\n      />\n    ),\n    [setNewUpdate, showUpdates]\n  );\n\n  const BellOff = useMemo(\n    () => (\n      <Icon.BellOff\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n        }}\n      />\n    ),\n    [showUpdates]\n  );\n\n  useEffectOnce(() => {\n    getStates();\n  });\n\n  useEffectOnce(() => {\n    axios\n      .get('https://api.covid19india.org/updatelog/log.json')\n      .then((response) => {\n        const lastTimestamp = response.data\n          .slice()\n          .reverse()[0]\n          .timestamp.toString();\n        if (lastTimestamp !== lastViewedLog) {\n          setNewUpdate(true);\n          setLastViewedLog(lastTimestamp);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  const getStates = async () => {\n    try {\n      const [\n        {data: statesDailyResponse},\n        {data: zonesResponse},\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/states_daily.json'),\n        axios.get('https://api.covid19india.org/zones.json'),\n      ]);\n\n      const [\n        {data},\n        {data: stateDistrictWiseResponse},\n        {data: stateTestData},\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        axios.get('https://api.covid19india.org/state_test_data.json'),\n      ]);\n\n      setStates(data.statewise);\n      setDistrictZones(parseDistrictZones(zonesResponse.zones));\n\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts['TT'] = preprocessTimeseries(data.cases_time_series);\n      // Testing data timeseries\n      const testTs = parseStateTestTimeseries(stateTestData.states_tested_data);\n      testTs['TT'] = parseTotalTestTimeseries(data.tested);\n      // Merge\n      const tsMerged = mergeTimeseries(ts, testTs);\n      setTimeseries(tsMerged);\n\n      setLastUpdated(data.statewise[0].lastupdatedtime);\n\n      const testData = [...stateTestData.states_tested_data].reverse();\n      const totalTest = data.tested[data.tested.length - 1];\n      testData.push({\n        updatedon: totalTest.updatetimestamp.split(' ')[0],\n        totaltested: totalTest.totalsamplestested,\n        source: totalTest.source,\n        state: 'Total',\n      });\n      setStateTestData(testData);\n\n      setStateDistrictWiseData(stateDistrictWiseResponse);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = useCallback((state) => {\n    if (!state) return setRegionHighlighted(null);\n    setRegionHighlighted({state: state.state});\n  }, []);\n\n  const onHighlightDistrict = useCallback((district, state) => {\n    if (!state && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state: state.state});\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <Helmet>\n          <title>Coronavirus Outbreak in India - covid19india.org</title>\n          <meta\n            name=\"title\"\n            content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\n          />\n        </Helmet>\n\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            {/* <LanguageSwitcher />*/}\n            {fetched && <Search districtZones={districtZones} />}\n\n            <div className=\"actions\">\n              <h5>\n                {isNaN(Date.parse(formatDate(lastUpdated)))\n                  ? ''\n                  : formatDateAbsolute(lastUpdated)}\n              </h5>\n              {fetched && !showUpdates && (\n                <div className=\"bell-icon\">\n                  {fetched && Bell}\n                  {newUpdate && <div className=\"indicator\"></div>}\n                </div>\n              )}\n              {fetched && showUpdates && BellOff}\n            </div>\n          </div>\n\n          {showUpdates && <Updates />}\n\n          {states && <Level data={states[0]} />}\n          {timeseries && <Minigraph timeseries={timeseries['TT']} />}\n          {stateDistrictWiseData && (\n            <Table\n              states={states}\n              summary={false}\n              districts={stateDistrictWiseData}\n              zones={districtZones}\n              regionHighlighted={regionHighlighted}\n              setRegionHighlighted={setRegionHighlighted}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n          )}\n        </div>\n\n        <div className=\"home-right\">\n          <React.Fragment>\n            {fetched && (\n              <MapExplorer\n                mapName={'India'}\n                states={states}\n                districts={stateDistrictWiseData}\n                zones={districtZones}\n                stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n                setRegionHighlighted={setRegionHighlighted}\n                anchor={anchor}\n                setAnchor={setAnchor}\n                mapOption={mapOption}\n                setMapOption={setMapOption}\n              />\n            )}\n\n            {timeseries && (\n              <TimeSeriesExplorer\n                timeseries={\n                  timeseries[\n                    STATE_CODES_REVERSE[regionHighlighted?.state] || 'TT'\n                  ]\n                }\n                activeStateCode={\n                  STATE_CODES_REVERSE[regionHighlighted?.state] || 'TT'\n                }\n                onHighlightState={onHighlightState}\n                states={states}\n                anchor={anchor}\n                setAnchor={setAnchor}\n              />\n            )}\n          </React.Fragment>\n        </div>\n      </div>\n      {fetched && <Footer />}\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}